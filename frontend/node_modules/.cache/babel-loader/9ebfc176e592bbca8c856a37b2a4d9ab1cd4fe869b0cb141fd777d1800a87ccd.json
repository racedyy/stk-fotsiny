{"ast":null,"code":"import axios from 'axios';\nimport API_BASE_URL from './api.config';\nconst API_URL = `${API_BASE_URL}/statistiques`;\n\n// Récupérer les statistiques des activités et membres entre deux dates\nconst getStatistiquesByDateRange = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-membres`, {\n      params: {\n        dateDebut,\n        dateFin\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par région entre deux dates\nconst getStatistiquesActivitesByRegion = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-par-region`, {\n      params: {\n        dateDebut,\n        dateFin\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des membres par activité entre deux dates\nconst getStatistiquesMembresParActivite = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/membres-par-activite`, {\n      params: {\n        dateDebut,\n        dateFin\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par personne entre deux dates\nconst getStatistiquesPersonnes = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/personnes`, {\n      params: {\n        dateDebut,\n        dateFin\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par service public entre deux dates\nconst getStatistiquesActivitesBySP = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-par-sp`, {\n      params: {\n        dateDebut,\n        dateFin\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst statistiqueService = {\n  getStatistiquesByDateRange,\n  getStatistiquesActivitesByRegion,\n  getStatistiquesMembresParActivite,\n  getStatistiquesPersonnes,\n  getStatistiquesActivitesBySP\n};\nexport default statistiqueService;","map":{"version":3,"names":["axios","API_BASE_URL","API_URL","getStatistiquesByDateRange","dateDebut","dateFin","response","get","params","data","error","getStatistiquesActivitesByRegion","getStatistiquesMembresParActivite","getStatistiquesPersonnes","getStatistiquesActivitesBySP","statistiqueService"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/services/statistique.service.js"],"sourcesContent":["import axios from 'axios';\nimport API_BASE_URL from './api.config';\n\nconst API_URL = `${API_BASE_URL}/statistiques`;\n\n// Récupérer les statistiques des activités et membres entre deux dates\nconst getStatistiquesByDateRange = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-membres`, {\n      params: { dateDebut, dateFin }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par région entre deux dates\nconst getStatistiquesActivitesByRegion = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-par-region`, {\n      params: { dateDebut, dateFin }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des membres par activité entre deux dates\nconst getStatistiquesMembresParActivite = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/membres-par-activite`, {\n      params: { dateDebut, dateFin }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par personne entre deux dates\nconst getStatistiquesPersonnes = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/personnes`, {\n      params: { dateDebut, dateFin }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer les statistiques des activités par service public entre deux dates\nconst getStatistiquesActivitesBySP = async (dateDebut, dateFin) => {\n  try {\n    const response = await axios.get(`${API_URL}/activites-par-sp`, {\n      params: { dateDebut, dateFin }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst statistiqueService = {\n  getStatistiquesByDateRange,\n  getStatistiquesActivitesByRegion,\n  getStatistiquesMembresParActivite,\n  getStatistiquesPersonnes,\n  getStatistiquesActivitesBySP\n};\n\nexport default statistiqueService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AAEvC,MAAMC,OAAO,GAAG,GAAGD,YAAY,eAAe;;AAE9C;AACA,MAAME,0BAA0B,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,oBAAoB,EAAE;MAC/DM,MAAM,EAAE;QAAEJ,SAAS;QAAEC;MAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,gCAAgC,GAAG,MAAAA,CAAOP,SAAS,EAAEC,OAAO,KAAK;EACrE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,uBAAuB,EAAE;MAClEM,MAAM,EAAE;QAAEJ,SAAS;QAAEC;MAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAME,iCAAiC,GAAG,MAAAA,CAAOR,SAAS,EAAEC,OAAO,KAAK;EACtE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,uBAAuB,EAAE;MAClEM,MAAM,EAAE;QAAEJ,SAAS;QAAEC;MAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMG,wBAAwB,GAAG,MAAAA,CAAOT,SAAS,EAAEC,OAAO,KAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,YAAY,EAAE;MACvDM,MAAM,EAAE;QAAEJ,SAAS;QAAEC;MAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMI,4BAA4B,GAAG,MAAAA,CAAOV,SAAS,EAAEC,OAAO,KAAK;EACjE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,mBAAmB,EAAE;MAC9DM,MAAM,EAAE;QAAEJ,SAAS;QAAEC;MAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMK,kBAAkB,GAAG;EACzBZ,0BAA0B;EAC1BQ,gCAAgC;EAChCC,iCAAiC;EACjCC,wBAAwB;EACxBC;AACF,CAAC;AAED,eAAeC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}