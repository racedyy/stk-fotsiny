{"ast":null,"code":"var _jsxFileName = \"D:\\\\itucedric\\\\L3\\\\S6\\\\rattrap S4\\\\prog\\\\ex_react\\\\stkkk\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport Notification from '../components/common/Notification';\n\n// Créer le contexte de notification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\n\n/**\n * Provider pour le contexte de notification\n * @param {Object} props - Propriétés du composant\n */\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n\n  // Ajouter une notification\n  const addNotification = (type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      type,\n      message,\n      duration\n    }]);\n    return id;\n  };\n\n  // Supprimer une notification\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Méthodes utilitaires\n  const showSuccess = (message, duration) => addNotification('success', message, duration);\n  const showError = (message, duration) => addNotification('error', message, duration);\n  const showWarning = (message, duration) => addNotification('warning', message, duration);\n  const showInfo = (message, duration) => addNotification('info', message, duration);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      addNotification,\n      removeNotification,\n      showSuccess,\n      showError,\n      showWarning,\n      showInfo\n    },\n    children: [children, notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      message: notification.message,\n      duration: notification.duration,\n      onClose: () => removeNotification(notification.id)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personnalisé pour utiliser le contexte de notification\n_s(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification doit être utilisé à l\\'intérieur d\\'un NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default NotificationContext;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","Notification","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notifications","setNotifications","addNotification","type","message","duration","id","Date","now","prev","removeNotification","filter","notification","showSuccess","showError","showWarning","showInfo","Provider","value","map","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport Notification from '../components/common/Notification';\n\n// Créer le contexte de notification\nconst NotificationContext = createContext();\n\n/**\n * Provider pour le contexte de notification\n * @param {Object} props - Propriétés du composant\n */\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  // Ajouter une notification\n  const addNotification = (type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, type, message, duration }]);\n    return id;\n  };\n\n  // Supprimer une notification\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Méthodes utilitaires\n  const showSuccess = (message, duration) => addNotification('success', message, duration);\n  const showError = (message, duration) => addNotification('error', message, duration);\n  const showWarning = (message, duration) => addNotification('warning', message, duration);\n  const showInfo = (message, duration) => addNotification('info', message, duration);\n\n  return (\n    <NotificationContext.Provider\n      value={{\n        addNotification,\n        removeNotification,\n        showSuccess,\n        showError,\n        showWarning,\n        showInfo\n      }}\n    >\n      {children}\n      {notifications.map(notification => (\n        <Notification\n          key={notification.id}\n          type={notification.type}\n          message={notification.message}\n          duration={notification.duration}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </NotificationContext.Provider>\n  );\n};\n\n// Hook personnalisé pour utiliser le contexte de notification\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification doit être utilisé à l\\'intérieur d\\'un NotificationProvider');\n  }\n  return context;\n};\n\nexport default NotificationContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,YAAY,MAAM,mCAAmC;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;;AAE3C;AACA;AACA;AACA;AACA,OAAO,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMW,eAAe,GAAGA,CAACC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAC1D,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBP,gBAAgB,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEH,EAAE;MAAEH,IAAI;MAAEC,OAAO;MAAEC;IAAS,CAAC,CAAC,CAAC;IACpE,OAAOC,EAAE;EACX,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAIJ,EAAE,IAAK;IACjCL,gBAAgB,CAACQ,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC/E,CAAC;;EAED;EACA,MAAMO,WAAW,GAAGA,CAACT,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,SAAS,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACxF,MAAMS,SAAS,GAAGA,CAACV,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,OAAO,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACpF,MAAMU,WAAW,GAAGA,CAACX,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,SAAS,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACxF,MAAMW,QAAQ,GAAGA,CAACZ,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,MAAM,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EAElF,oBACEV,OAAA,CAACC,mBAAmB,CAACqB,QAAQ;IAC3BC,KAAK,EAAE;MACLhB,eAAe;MACfQ,kBAAkB;MAClBG,WAAW;MACXC,SAAS;MACTC,WAAW;MACXC;IACF,CAAE;IAAAlB,QAAA,GAEDA,QAAQ,EACRE,aAAa,CAACmB,GAAG,CAACP,YAAY,iBAC7BjB,OAAA,CAACF,YAAY;MAEXU,IAAI,EAAES,YAAY,CAACT,IAAK;MACxBC,OAAO,EAAEQ,YAAY,CAACR,OAAQ;MAC9BC,QAAQ,EAAEO,YAAY,CAACP,QAAS;MAChCe,OAAO,EAAEA,CAAA,KAAMV,kBAAkB,CAACE,YAAY,CAACN,EAAE;IAAE,GAJ9CM,YAAY,CAACN,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKrB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC0B,CAAC;AAEnC,CAAC;;AAED;AAAAzB,EAAA,CA9CaF,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AA+CjC,OAAO,MAAM6B,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMC,OAAO,GAAGpC,UAAU,CAACI,mBAAmB,CAAC;EAC/C,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6EAA6E,CAAC;EAChG;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,eAAe;AAQ5B,eAAe9B,mBAAmB;AAAC,IAAA6B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}