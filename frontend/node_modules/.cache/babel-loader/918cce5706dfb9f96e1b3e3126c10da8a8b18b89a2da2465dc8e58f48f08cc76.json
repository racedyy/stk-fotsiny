{"ast":null,"code":"var _jsxFileName = \"D:\\\\itucedric\\\\L3\\\\S6\\\\rattrap S4\\\\prog\\\\ex_react\\\\stkkk\\\\frontend\\\\src\\\\pages\\\\paiements\\\\PaiementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport paiementService from '../../services/paiement.service';\nimport activiteService from '../../services/activite.service';\nimport membreService from '../../services/membre.service';\nimport presenceService from '../../services/presence.service';\nimport personneService from '../../services/personne.service';\nimport './PaiementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaiementForm = () => {\n  _s();\n  var _membres$find, _membres$find2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    showSuccess,\n    showError\n  } = useNotification();\n  const isEditMode = !!id;\n  const [loading, setLoading] = useState(false);\n  const [activites, setActivites] = useState([]);\n  const [membres, setMembres] = useState([]);\n  const [membrePresences, setMembrePresences] = useState([]);\n  const [selectedActivite, setSelectedActivite] = useState('');\n  const [selectedMembre, setSelectedMembre] = useState('');\n  const [formData, setFormData] = useState({\n    id_presence_act: '',\n    daty: new Date().toISOString().split('T')[0],\n    montant: '',\n    nbPersonnes: 0\n  });\n\n  // Paramètres de remise (à gérer uniquement dans le code)\n  const [nbPersonnesRemise, setNbPersonnesRemise] = useState(3);\n  const [pourcentageRemise, setPourcentageRemise] = useState(10);\n\n  // Montant calculé avec remise éventuelle\n  const [montantAvecRemise, setMontantAvecRemise] = useState(0);\n  useEffect(() => {\n    const fetchActivites = async () => {\n      try {\n        const data = await activiteService.getAllActivites();\n        setActivites(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des activités:', error);\n        showError('Erreur lors du chargement des activités');\n      }\n    };\n    const fetchMembres = async () => {\n      try {\n        const data = await membreService.getAllMembres();\n        setMembres(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des membres:', error);\n        showError('Erreur lors du chargement des membres');\n      }\n    };\n    fetchActivites();\n    fetchMembres();\n    if (isEditMode) {\n      const fetchPaiement = async () => {\n        try {\n          setLoading(true);\n          const data = await paiementService.getPaiementById(id);\n          setFormData({\n            id_presence_act: data.id_presence_act,\n            daty: new Date(data.daty).toISOString().split('T')[0],\n            montant: data.montant,\n            nbPersonnes: 0\n          });\n          setSelectedActivite(data.id_act);\n\n          // Récupérer la présence pour obtenir le membre\n          const presenceData = await presenceService.getPresenceById(data.id_presence_act);\n          if (presenceData && presenceData.id_membre) {\n            setSelectedMembre(presenceData.id_membre);\n          }\n          setLoading(false);\n        } catch (error) {\n          console.error('Erreur lors du chargement du paiement:', error);\n          showError('Erreur lors du chargement du paiement');\n          setLoading(false);\n        }\n      };\n      fetchPaiement();\n    }\n  }, [id, isEditMode, showError]);\n  useEffect(() => {\n    if (selectedActivite && selectedMembre) {\n      const fetchMembrePresences = async () => {\n        try {\n          // Récupérer les présences du membre pour cette activité\n          const data = await presenceService.getPresencesByActivite(selectedActivite);\n          const membrePresencesData = data.filter(p => p.id_membre === parseInt(selectedMembre));\n          setMembrePresences(membrePresencesData);\n\n          // Si une seule présence est trouvée, la sélectionner automatiquement\n          if (membrePresencesData.length === 1) {\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              id_presence_act: membrePresencesData[0].id.toString()\n            }));\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des présences du membre:', error);\n          showError('Erreur lors du chargement des présences du membre');\n        }\n      };\n      fetchMembrePresences();\n    } else {\n      setMembrePresences([]);\n    }\n  }, [selectedActivite, selectedMembre, showError]);\n\n  // Effet pour calculer le montant avec remise\n  useEffect(() => {\n    let montant = parseFloat(formData.montant) || 0;\n\n    // Considérer les personnes emmenées comme des participants non-membres\n    // Le nombre total de participants est donc 1 (le membre) + le nombre de personnes emmenées\n    const totalParticipants = 1 + parseInt(formData.nbPersonnes || 0);\n\n    // Appliquer la remise si le nombre total de participants est suffisant\n    if (totalParticipants >= nbPersonnesRemise) {\n      const remise = montant * pourcentageRemise / 100;\n      montant = montant - remise;\n    }\n    setMontantAvecRemise(montant);\n  }, [formData.montant, formData.nbPersonnes, nbPersonnesRemise, pourcentageRemise]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleActiviteChange = e => {\n    setSelectedActivite(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n  const handleMembreChange = e => {\n    setSelectedMembre(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedMembre) {\n      showError('Veuillez sélectionner un membre');\n      return;\n    }\n    if (membrePresences.length === 0) {\n      showError('Ce membre n\\'est pas inscrit à cette activité. Veuillez d\\'abord l\\'inscrire avant de procéder au paiement.');\n      return;\n    }\n\n    // Si le membre est inscrit, utiliser sa présence\n    const id_presence_act = membrePresences[0].id;\n    const nbPersonnesAjoutees = parseInt(formData.nbPersonnes || 0);\n    try {\n      setLoading(true);\n\n      // Préparer les données de paiement (sans le nbPersonnes qui est juste pour le calcul)\n      const paiementData = {\n        id_presence_act: id_presence_act,\n        daty: formData.daty,\n        montant: montantAvecRemise // Utiliser le montant avec remise\n      };\n\n      // Créer le paiement principal\n      if (isEditMode) {\n        await paiementService.updatePaiement(id, paiementData);\n        showSuccess('Paiement mis à jour avec succès');\n      } else {\n        // C'est un membre, donc utiliser createPaiementMembre\n        await paiementService.createPaiementMembre(paiementData);\n\n        // Si des personnes non-membres sont ajoutées, les créer et les ajouter comme participants\n        if (nbPersonnesAjoutees > 0) {\n          // Récupérer les informations du membre pour les utiliser dans la création des personnes\n          const membre = membres.find(m => m.id.toString() === selectedMembre);\n\n          // Créer et ajouter chaque personne non-membre\n          for (let i = 0; i < nbPersonnesAjoutees; i++) {\n            try {\n              // 1. Créer une nouvelle personne (non-membre)\n              const personneData = {\n                nom: `Invité de ${membre.nom}`,\n                prenom: `${i + 1}`,\n                adresse: membre.adresse || '',\n                telephone: membre.telephone || ''\n              };\n              const nouvellePersonne = await personneService.createPersonne(personneData);\n\n              // 2. Ajouter cette personne comme participant à l'activité avec le membre comme accompagnateur\n              await presenceService.createPresencePersonne({\n                id_personne: nouvellePersonne.id,\n                id_act: selectedActivite,\n                id_membre_accompagnateur: membre.id\n              });\n            } catch (err) {\n              console.error(`Erreur lors de l'ajout de la personne non-membre ${i + 1}:`, err);\n              // Continuer avec les autres personnes même si une échoue\n            }\n          }\n        }\n        showSuccess(`Paiement créé avec succès${nbPersonnesAjoutees > 0 ? ` et ${nbPersonnesAjoutees} personne(s) non-membre(s) ajoutée(s)` : ''}`);\n      }\n\n      // Rediriger vers la page de détails de l'activité au lieu de la liste des paiements\n      navigate(`/activites/${selectedActivite}`);\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement du paiement:', error);\n      showError('Erreur lors de l\\'enregistrement du paiement');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paiement-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isEditMode ? 'Modifier le paiement' : 'Nouveau paiement'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"activite\",\n            className: \"form-label\",\n            children: \"Activit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"activite\",\n            className: \"form-select\",\n            value: selectedActivite,\n            onChange: handleActiviteChange,\n            disabled: isEditMode,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une activit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), activites.map(activite => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: activite.id,\n              children: [new Date(activite.daty).toLocaleDateString(), \" - \", activite.description, \" - \", activite.cotisation, \" \\u20AC\"]\n            }, activite.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"membre\",\n            className: \"form-label\",\n            children: \"Membre qui emm\\xE8ne des personnes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"membre\",\n            className: \"form-select\",\n            value: selectedMembre,\n            onChange: handleMembreChange,\n            disabled: isEditMode || !selectedActivite,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner un membre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), membres.map(membre => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: membre.id,\n              children: [membre.nom, \" \", membre.prenom]\n            }, membre.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), membrePresences.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pr\\xE9sence confirm\\xE9e pour cette activit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Le membre \", (_membres$find = membres.find(m => m.id.toString() === selectedMembre)) === null || _membres$find === void 0 ? void 0 : _membres$find.nom, \" \", (_membres$find2 = membres.find(m => m.id.toString() === selectedMembre)) === null || _membres$find2 === void 0 ? void 0 : _membres$find2.prenom, \" est bien inscrit \\xE0 cette activit\\xE9.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), selectedActivite && selectedMembre && membrePresences.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Attention !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ce membre n'est pas inscrit \\xE0 cette activit\\xE9. Veuillez d'abord l'inscrire \\xE0 l'activit\\xE9 avant de proc\\xE9der au paiement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"daty\",\n            className: \"form-label\",\n            children: \"Date de paiement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            id: \"daty\",\n            name: \"daty\",\n            value: formData.daty,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"montant\",\n            className: \"form-label\",\n            children: \"Montant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"form-control\",\n            id: \"montant\",\n            name: \"montant\",\n            value: formData.montant,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nbPersonnes\",\n            className: \"form-label\",\n            children: \"Nombre de personnes non-membres amen\\xE9es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            className: \"form-control\",\n            id: \"nbPersonnes\",\n            name: \"nbPersonnes\",\n            value: formData.nbPersonnes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"Ces personnes sont consid\\xE9r\\xE9es comme des participants non-membres \\xE0 l'activit\\xE9.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted d-block\",\n            children: [\"Une remise de \", pourcentageRemise, \"% sera appliqu\\xE9e si le nombre total de participants (membre + personnes amen\\xE9es) est sup\\xE9rieur ou \\xE9gal \\xE0 \", nbPersonnesRemise, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nbPersonnesRemise\",\n            className: \"form-label\",\n            children: \"Nombre de personnes pour remise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            className: \"form-control\",\n            id: \"nbPersonnesRemise\",\n            value: nbPersonnesRemise,\n            onChange: e => setNbPersonnesRemise(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pourcentageRemise\",\n            className: \"form-label\",\n            children: \"Pourcentage de remise (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            max: \"100\",\n            step: \"0.1\",\n            className: \"form-control\",\n            id: \"pourcentageRemise\",\n            value: pourcentageRemise,\n            onChange: e => setPourcentageRemise(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), formData.montant && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Montant apr\\xE8s remise \\xE9ventuelle: \", montantAvecRemise.toFixed(2), \" Ar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), parseInt(formData.nbPersonnes || 0) + 1 >= nbPersonnesRemise ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-check-circle-fill me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), \"Une remise de \", pourcentageRemise, \"% a \\xE9t\\xE9 appliqu\\xE9e car le nombre total de participants (\", parseInt(formData.nbPersonnes || 0) + 1, \") est sup\\xE9rieur ou \\xE9gal \\xE0 \", nbPersonnesRemise]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-info-circle-fill me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this), \"Aucune remise appliqu\\xE9e. Il faut au moins \", nbPersonnesRemise, \" participants pour b\\xE9n\\xE9ficier d'une remise de \", pourcentageRemise, \"% (actuellement \", parseInt(formData.nbPersonnes || 0) + 1, \" participants)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => navigate('/paiements'),\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: loading,\n            children: isEditMode ? 'Mettre à jour' : 'Enregistrer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(PaiementForm, \"x0Aa7tDZwb9OdizHHckaERLe+Hk=\", false, function () {\n  return [useParams, useNavigate, useNotification];\n});\n_c = PaiementForm;\nexport default PaiementForm;\nvar _c;\n$RefreshReg$(_c, \"PaiementForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useNotification","paiementService","activiteService","membreService","presenceService","personneService","jsxDEV","_jsxDEV","PaiementForm","_s","_membres$find","_membres$find2","id","navigate","showSuccess","showError","isEditMode","loading","setLoading","activites","setActivites","membres","setMembres","membrePresences","setMembrePresences","selectedActivite","setSelectedActivite","selectedMembre","setSelectedMembre","formData","setFormData","id_presence_act","daty","Date","toISOString","split","montant","nbPersonnes","nbPersonnesRemise","setNbPersonnesRemise","pourcentageRemise","setPourcentageRemise","montantAvecRemise","setMontantAvecRemise","fetchActivites","data","getAllActivites","error","console","fetchMembres","getAllMembres","fetchPaiement","getPaiementById","id_act","presenceData","getPresenceById","id_membre","fetchMembrePresences","getPresencesByActivite","membrePresencesData","filter","p","parseInt","length","prevFormData","toString","parseFloat","totalParticipants","remise","handleChange","e","name","value","target","handleActiviteChange","handleMembreChange","handleSubmit","preventDefault","nbPersonnesAjoutees","paiementData","updatePaiement","createPaiementMembre","membre","find","m","i","personneData","nom","prenom","adresse","telephone","nouvellePersonne","createPersonne","createPresencePersonne","id_personne","id_membre_accompagnateur","err","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","disabled","required","map","activite","toLocaleDateString","description","cotisation","type","step","min","max","toFixed","onClick","_c","$RefreshReg$"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/pages/paiements/PaiementForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport paiementService from '../../services/paiement.service';\nimport activiteService from '../../services/activite.service';\nimport membreService from '../../services/membre.service';\nimport presenceService from '../../services/presence.service';\nimport personneService from '../../services/personne.service';\nimport './PaiementForm.css';\n\nconst PaiementForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { showSuccess, showError } = useNotification();\n  const isEditMode = !!id;\n\n  const [loading, setLoading] = useState(false);\n  const [activites, setActivites] = useState([]);\n  const [membres, setMembres] = useState([]);\n  const [membrePresences, setMembrePresences] = useState([]);\n  const [selectedActivite, setSelectedActivite] = useState('');\n  const [selectedMembre, setSelectedMembre] = useState('');\n  const [formData, setFormData] = useState({\n    id_presence_act: '',\n    daty: new Date().toISOString().split('T')[0],\n    montant: '',\n    nbPersonnes: 0\n  });\n  \n  // Paramètres de remise (à gérer uniquement dans le code)\n  const [nbPersonnesRemise, setNbPersonnesRemise] = useState(3);\n  const [pourcentageRemise, setPourcentageRemise] = useState(10);\n  \n  // Montant calculé avec remise éventuelle\n  const [montantAvecRemise, setMontantAvecRemise] = useState(0);\n\n  useEffect(() => {\n    const fetchActivites = async () => {\n      try {\n        const data = await activiteService.getAllActivites();\n        setActivites(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des activités:', error);\n        showError('Erreur lors du chargement des activités');\n      }\n    };\n\n    const fetchMembres = async () => {\n      try {\n        const data = await membreService.getAllMembres();\n        setMembres(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des membres:', error);\n        showError('Erreur lors du chargement des membres');\n      }\n    };\n\n    fetchActivites();\n    fetchMembres();\n\n    if (isEditMode) {\n      const fetchPaiement = async () => {\n        try {\n          setLoading(true);\n          const data = await paiementService.getPaiementById(id);\n          setFormData({\n            id_presence_act: data.id_presence_act,\n            daty: new Date(data.daty).toISOString().split('T')[0],\n            montant: data.montant,\n            nbPersonnes: 0\n          });\n          setSelectedActivite(data.id_act);\n          \n          // Récupérer la présence pour obtenir le membre\n          const presenceData = await presenceService.getPresenceById(data.id_presence_act);\n          if (presenceData && presenceData.id_membre) {\n            setSelectedMembre(presenceData.id_membre);\n          }\n          \n          setLoading(false);\n        } catch (error) {\n          console.error('Erreur lors du chargement du paiement:', error);\n          showError('Erreur lors du chargement du paiement');\n          setLoading(false);\n        }\n      };\n\n      fetchPaiement();\n    }\n  }, [id, isEditMode, showError]);\n\n  useEffect(() => {\n    if (selectedActivite && selectedMembre) {\n      const fetchMembrePresences = async () => {\n        try {\n          // Récupérer les présences du membre pour cette activité\n          const data = await presenceService.getPresencesByActivite(selectedActivite);\n          const membrePresencesData = data.filter(p => p.id_membre === parseInt(selectedMembre));\n          setMembrePresences(membrePresencesData);\n          \n          // Si une seule présence est trouvée, la sélectionner automatiquement\n          if (membrePresencesData.length === 1) {\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              id_presence_act: membrePresencesData[0].id.toString()\n            }));\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des présences du membre:', error);\n          showError('Erreur lors du chargement des présences du membre');\n        }\n      };\n\n      fetchMembrePresences();\n    } else {\n      setMembrePresences([]);\n    }\n  }, [selectedActivite, selectedMembre, showError]);\n\n  // Effet pour calculer le montant avec remise\n  useEffect(() => {\n    let montant = parseFloat(formData.montant) || 0;\n    \n    // Considérer les personnes emmenées comme des participants non-membres\n    // Le nombre total de participants est donc 1 (le membre) + le nombre de personnes emmenées\n    const totalParticipants = 1 + parseInt(formData.nbPersonnes || 0);\n    \n    // Appliquer la remise si le nombre total de participants est suffisant\n    if (totalParticipants >= nbPersonnesRemise) {\n      const remise = (montant * pourcentageRemise) / 100;\n      montant = montant - remise;\n    }\n    \n    setMontantAvecRemise(montant);\n  }, [formData.montant, formData.nbPersonnes, nbPersonnesRemise, pourcentageRemise]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleActiviteChange = (e) => {\n    setSelectedActivite(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n\n  const handleMembreChange = (e) => {\n    setSelectedMembre(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedMembre) {\n      showError('Veuillez sélectionner un membre');\n      return;\n    }\n    \n    if (membrePresences.length === 0) {\n      showError('Ce membre n\\'est pas inscrit à cette activité. Veuillez d\\'abord l\\'inscrire avant de procéder au paiement.');\n      return;\n    }\n    \n    // Si le membre est inscrit, utiliser sa présence\n    const id_presence_act = membrePresences[0].id;\n    const nbPersonnesAjoutees = parseInt(formData.nbPersonnes || 0);\n\n    try {\n      setLoading(true);\n      \n      // Préparer les données de paiement (sans le nbPersonnes qui est juste pour le calcul)\n      const paiementData = {\n        id_presence_act: id_presence_act,\n        daty: formData.daty,\n        montant: montantAvecRemise // Utiliser le montant avec remise\n      };\n\n      // Créer le paiement principal\n      if (isEditMode) {\n        await paiementService.updatePaiement(id, paiementData);\n        showSuccess('Paiement mis à jour avec succès');\n      } else {\n        // C'est un membre, donc utiliser createPaiementMembre\n        await paiementService.createPaiementMembre(paiementData);\n        \n        // Si des personnes non-membres sont ajoutées, les créer et les ajouter comme participants\n        if (nbPersonnesAjoutees > 0) {\n          // Récupérer les informations du membre pour les utiliser dans la création des personnes\n          const membre = membres.find(m => m.id.toString() === selectedMembre);\n          \n          // Créer et ajouter chaque personne non-membre\n          for (let i = 0; i < nbPersonnesAjoutees; i++) {\n            try {\n              // 1. Créer une nouvelle personne (non-membre)\n              const personneData = {\n                nom: `Invité de ${membre.nom}`,\n                prenom: `${i + 1}`,\n                adresse: membre.adresse || '',\n                telephone: membre.telephone || ''\n              };\n              \n              const nouvellePersonne = await personneService.createPersonne(personneData);\n              \n              // 2. Ajouter cette personne comme participant à l'activité avec le membre comme accompagnateur\n              await presenceService.createPresencePersonne({\n                id_personne: nouvellePersonne.id,\n                id_act: selectedActivite,\n                id_membre_accompagnateur: membre.id\n              });\n            } catch (err) {\n              console.error(`Erreur lors de l'ajout de la personne non-membre ${i + 1}:`, err);\n              // Continuer avec les autres personnes même si une échoue\n            }\n          }\n        }\n        \n        showSuccess(`Paiement créé avec succès${nbPersonnesAjoutees > 0 ? ` et ${nbPersonnesAjoutees} personne(s) non-membre(s) ajoutée(s)` : ''}`);\n      }\n      \n      // Rediriger vers la page de détails de l'activité au lieu de la liste des paiements\n      navigate(`/activites/${selectedActivite}`);\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement du paiement:', error);\n      showError('Erreur lors de l\\'enregistrement du paiement');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Chargement...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"paiement-form\">\n      <h1>{isEditMode ? 'Modifier le paiement' : 'Nouveau paiement'}</h1>\n      \n      <form onSubmit={handleSubmit} className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"activite\" className=\"form-label\">Activité</label>\n            <select\n              id=\"activite\"\n              className=\"form-select\"\n              value={selectedActivite}\n              onChange={handleActiviteChange}\n              disabled={isEditMode}\n              required\n            >\n              <option value=\"\">Sélectionner une activité</option>\n              {activites.map(activite => (\n                <option key={activite.id} value={activite.id}>\n                  {new Date(activite.daty).toLocaleDateString()} - {activite.description} - {activite.cotisation} €\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"membre\" className=\"form-label\">Membre qui emmène des personnes</label>\n            <select\n              id=\"membre\"\n              className=\"form-select\"\n              value={selectedMembre}\n              onChange={handleMembreChange}\n              disabled={isEditMode || !selectedActivite}\n              required\n            >\n              <option value=\"\">Sélectionner un membre</option>\n              {membres.map(membre => (\n                <option key={membre.id} value={membre.id}>\n                  {membre.nom} {membre.prenom}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {membrePresences.length > 0 && (\n            <div className=\"alert alert-info\">\n              <p><strong>Présence confirmée pour cette activité</strong></p>\n              <p>Le membre {membres.find(m => m.id.toString() === selectedMembre)?.nom} {membres.find(m => m.id.toString() === selectedMembre)?.prenom} est bien inscrit à cette activité.</p>\n            </div>\n          )}\n          \n          {selectedActivite && selectedMembre && membrePresences.length === 0 && (\n            <div className=\"alert alert-warning\">\n              <p><strong>Attention !</strong></p>\n              <p>Ce membre n'est pas inscrit à cette activité. Veuillez d'abord l'inscrire à l'activité avant de procéder au paiement.</p>\n            </div>\n          )}\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"daty\" className=\"form-label\">Date de paiement</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"daty\"\n              name=\"daty\"\n              value={formData.daty}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"montant\" className=\"form-label\">Montant</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"form-control\"\n              id=\"montant\"\n              name=\"montant\"\n              value={formData.montant}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"nbPersonnes\" className=\"form-label\">Nombre de personnes non-membres amenées</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"nbPersonnes\"\n              name=\"nbPersonnes\"\n              value={formData.nbPersonnes}\n              onChange={handleChange}\n            />\n            <small className=\"form-text text-muted\">\n              Ces personnes sont considérées comme des participants non-membres à l'activité.\n            </small>\n            <small className=\"form-text text-muted d-block\">\n              Une remise de {pourcentageRemise}% sera appliquée si le nombre total de participants (membre + personnes amenées) est supérieur ou égal à {nbPersonnesRemise}.\n            </small>\n          </div>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"nbPersonnesRemise\" className=\"form-label\">Nombre de personnes pour remise</label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              className=\"form-control\"\n              id=\"nbPersonnesRemise\"\n              value={nbPersonnesRemise}\n              onChange={(e) => setNbPersonnesRemise(parseInt(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"pourcentageRemise\" className=\"form-label\">Pourcentage de remise (%)</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.1\"\n              className=\"form-control\"\n              id=\"pourcentageRemise\"\n              value={pourcentageRemise}\n              onChange={(e) => setPourcentageRemise(parseFloat(e.target.value))}\n            />\n          </div>\n          \n          {formData.montant && (\n            <div className=\"alert alert-info\">\n              <strong>Montant après remise éventuelle: {montantAvecRemise.toFixed(2)} Ar</strong>\n              {parseInt(formData.nbPersonnes || 0) + 1 >= nbPersonnesRemise ? (\n                <div>\n                  <small>\n                    <i className=\"bi bi-check-circle-fill me-1\"></i>\n                    Une remise de {pourcentageRemise}% a été appliquée car le nombre total de participants ({parseInt(formData.nbPersonnes || 0) + 1}) est supérieur ou égal à {nbPersonnesRemise}\n                  </small>\n                </div>\n              ) : (\n                <div>\n                  <small>\n                    <i className=\"bi bi-info-circle-fill me-1\"></i>\n                    Aucune remise appliquée. Il faut au moins {nbPersonnesRemise} participants pour bénéficier d'une remise de {pourcentageRemise}% (actuellement {parseInt(formData.nbPersonnes || 0) + 1} participants)\n                  </small>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={() => navigate('/paiements')}\n            >\n              Annuler\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={loading}\n            >\n              {isEditMode ? 'Mettre à jour' : 'Enregistrer'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PaiementForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}