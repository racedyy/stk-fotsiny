{"ast":null,"code":"var _jsxFileName = \"D:\\\\itucedric\\\\L3\\\\S6\\\\rattrap S4\\\\prog\\\\ex_react\\\\stkkk\\\\frontend\\\\src\\\\pages\\\\sp\\\\SPForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport spService from '../../services/sp.service';\nimport Spinner from '../../components/common/Spinner';\nimport Alert from '../../components/common/Alert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SPForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditMode = !!id;\n  const [formData, setFormData] = useState({\n    description: '',\n    region: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isEditMode) {\n        setLoading(true);\n        try {\n          const spData = await spService.getSPById(id);\n          setFormData({\n            description: spData.description,\n            region: spData.region\n          });\n        } catch (err) {\n          console.error('Erreur lors du chargement du service public:', err);\n          setError('Erreur lors du chargement du service public. Veuillez réessayer plus tard.');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchData();\n  }, [id, isEditMode]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation de base\n    if (!formData.description || !formData.region) {\n      setError('Veuillez remplir tous les champs obligatoires.');\n      return;\n    }\n    setSubmitting(true);\n    setError(null);\n    try {\n      if (isEditMode) {\n        await spService.updateSP(id, formData);\n      } else {\n        await spService.createSP(formData);\n      }\n      navigate('/sp');\n    } catch (err) {\n      console.error('Erreur lors de l\\'enregistrement du service public:', err);\n      setError('Erreur lors de l\\'enregistrement du service public. Veuillez réessayer plus tard.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {\n    text: \"Chargement des donn\\xE9es...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sp-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: isEditMode ? 'Modifier un service public' : 'Ajouter un service public'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"danger\",\n      message: error,\n      onClose: () => setError(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              className: \"form-label\",\n              children: \"Description *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"region\",\n              className: \"form-label\",\n              children: \"R\\xE9gion *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"region\",\n              name: \"region\",\n              value: formData.region,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/sp\",\n              className: \"btn btn-secondary\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: submitting,\n              children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"spinner-border spinner-border-sm me-2\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), \"Enregistrement...\"]\n              }, void 0, true) : 'Enregistrer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(SPForm, \"tH5WRdTP5wbWGYZaUdMJKhm/JXM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SPForm;\nexport default SPForm;\nvar _c;\n$RefreshReg$(_c, \"SPForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","spService","Spinner","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","SPForm","_s","id","navigate","isEditMode","formData","setFormData","description","region","loading","setLoading","submitting","setSubmitting","error","setError","fetchData","spData","getSPById","err","console","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","updateSP","createSP","text","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","message","onClose","onSubmit","htmlFor","onChange","required","to","disabled","role","_c","$RefreshReg$"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/pages/sp/SPForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport spService from '../../services/sp.service';\nimport Spinner from '../../components/common/Spinner';\nimport Alert from '../../components/common/Alert';\n\nconst SPForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const isEditMode = !!id;\n  \n  const [formData, setFormData] = useState({\n    description: '',\n    region: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      if (isEditMode) {\n        setLoading(true);\n        try {\n          const spData = await spService.getSPById(id);\n          setFormData({\n            description: spData.description,\n            region: spData.region\n          });\n        } catch (err) {\n          console.error('Erreur lors du chargement du service public:', err);\n          setError('Erreur lors du chargement du service public. Veuillez réessayer plus tard.');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    \n    fetchData();\n  }, [id, isEditMode]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validation de base\n    if (!formData.description || !formData.region) {\n      setError('Veuillez remplir tous les champs obligatoires.');\n      return;\n    }\n    \n    setSubmitting(true);\n    setError(null);\n    \n    try {\n      if (isEditMode) {\n        await spService.updateSP(id, formData);\n      } else {\n        await spService.createSP(formData);\n      }\n      \n      navigate('/sp');\n    } catch (err) {\n      console.error('Erreur lors de l\\'enregistrement du service public:', err);\n      setError('Erreur lors de l\\'enregistrement du service public. Veuillez réessayer plus tard.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  \n  if (loading) return <Spinner text=\"Chargement des données...\" />;\n  \n  return (\n    <div className=\"sp-form\">\n      <h1 className=\"mb-4\">{isEditMode ? 'Modifier un service public' : 'Ajouter un service public'}</h1>\n      \n      {error && <Alert type=\"danger\" message={error} onClose={() => setError(null)} />}\n      \n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label\">Description *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"region\" className=\"form-label\">Région *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"region\"\n                name=\"region\"\n                value={formData.region}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            \n            <div className=\"d-flex justify-content-between\">\n              <Link to=\"/sp\" className=\"btn btn-secondary\">\n                Annuler\n              </Link>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={submitting}\n              >\n                {submitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Enregistrement...\n                  </>\n                ) : (\n                  'Enregistrer'\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SPForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}