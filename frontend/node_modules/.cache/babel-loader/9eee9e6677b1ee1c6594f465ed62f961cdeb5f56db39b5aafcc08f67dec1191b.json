{"ast":null,"code":"var _jsxFileName = \"D:\\\\itucedric\\\\L3\\\\S6\\\\rattrap S4\\\\prog\\\\ex_react\\\\stkkk\\\\frontend\\\\src\\\\pages\\\\paiements\\\\PaiementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport paiementService from '../../services/paiement.service';\nimport activiteService from '../../services/activite.service';\nimport membreService from '../../services/membre.service';\nimport presenceService from '../../services/presence.service';\nimport remiseService from '../../services/remise.service';\nimport './PaiementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaiementForm = () => {\n  _s();\n  var _membres$find, _membres$find2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    showSuccess,\n    showError\n  } = useNotification();\n  const isEditMode = !!id;\n\n  // Récupérer les paramètres de l'URL\n  const queryParams = new URLSearchParams(location.search);\n  const activiteIdFromUrl = queryParams.get('activite');\n  const membreIdFromUrl = queryParams.get('membre');\n  const personneIdFromUrl = queryParams.get('personne');\n  const accompagnateurIdFromUrl = queryParams.get('accompagnateur');\n  const [loading, setLoading] = useState(false);\n  const [activites, setActivites] = useState([]);\n  const [membres, setMembres] = useState([]);\n  const [membrePresences, setMembrePresences] = useState([]);\n  const [selectedActivite, setSelectedActivite] = useState(activiteIdFromUrl || '');\n  const [selectedMembre, setSelectedMembre] = useState(membreIdFromUrl || '');\n  const [selectedPersonne, setSelectedPersonne] = useState(personneIdFromUrl || '');\n  const [selectedAccompagnateur, setSelectedAccompagnateur] = useState(accompagnateurIdFromUrl || '');\n  const [formData, setFormData] = useState({\n    id_presence_act: '',\n    daty: new Date().toISOString().split('T')[0],\n    montant: '',\n    nbPersonnes: 0\n  });\n\n  // États pour les remises\n  const [remises, setRemises] = useState([]);\n  const [remiseApplicable, setRemiseApplicable] = useState(null);\n  const [totalParticipants, setTotalParticipants] = useState(0);\n\n  // Montant calculé avec remise éventuelle\n  const [montantAvecRemise, setMontantAvecRemise] = useState(0);\n  useEffect(() => {\n    const fetchActivites = async () => {\n      try {\n        const data = await activiteService.getAllActivites();\n        setActivites(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des activités:', error);\n        showError('Erreur lors du chargement des activités');\n      }\n    };\n    const fetchMembres = async () => {\n      try {\n        const data = await membreService.getAllMembres();\n        setMembres(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des membres:', error);\n        showError('Erreur lors du chargement des membres');\n      }\n    };\n    const fetchRemises = async () => {\n      try {\n        const data = await remiseService.getAllRemises();\n        setRemises(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des remises:', error);\n        showError('Erreur lors du chargement des remises');\n      }\n    };\n    fetchActivites();\n    fetchMembres();\n    fetchRemises();\n    if (isEditMode) {\n      const fetchPaiement = async () => {\n        try {\n          setLoading(true);\n          const data = await paiementService.getPaiementById(id);\n          setFormData({\n            id_presence_act: data.id_presence_act,\n            daty: new Date(data.daty).toISOString().split('T')[0],\n            montant: data.montant,\n            nbPersonnes: 0\n          });\n          setSelectedActivite(data.id_act);\n\n          // Récupérer la présence pour obtenir le membre\n          const presenceData = await presenceService.getPresenceById(data.id_presence_act);\n          if (presenceData && presenceData.id_membre) {\n            setSelectedMembre(presenceData.id_membre);\n          }\n          setLoading(false);\n        } catch (error) {\n          console.error('Erreur lors du chargement du paiement:', error);\n          showError('Erreur lors du chargement du paiement');\n          setLoading(false);\n        }\n      };\n      fetchPaiement();\n    }\n  }, [id, isEditMode, showError]);\n  useEffect(() => {\n    if (selectedActivite && selectedMembre) {\n      const fetchMembrePresences = async () => {\n        try {\n          // Récupérer les présences du membre pour cette activité\n          const data = await presenceService.getPresencesByActivite(selectedActivite);\n          const membrePresencesData = data.filter(p => p.id_membre === parseInt(selectedMembre));\n          setMembrePresences(membrePresencesData);\n\n          // Si une seule présence est trouvée, la sélectionner automatiquement\n          if (membrePresencesData.length === 1) {\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              id_presence_act: membrePresencesData[0].id.toString()\n            }));\n          }\n\n          // Calculer le nombre total de participants pour cette activité\n          setTotalParticipants(data.length + parseInt(formData.nbPersonnes || 0));\n        } catch (error) {\n          console.error('Erreur lors du chargement des présences du membre:', error);\n          showError('Erreur lors du chargement des présences');\n        }\n      };\n      fetchMembrePresences();\n    } else {\n      setMembrePresences([]);\n    }\n  }, [selectedActivite, selectedMembre, formData.nbPersonnes, showError]);\n\n  // Déterminer la remise applicable en fonction du nombre total de participants\n  useEffect(() => {\n    if (remises.length > 0) {\n      // Nombre total de participants = participants existants + nouvelles personnes anonymes\n      const nbTotalParticipants = totalParticipants + parseInt(formData.nbPersonnes || 0);\n\n      // Trouver la remise applicable avec le plus grand nombre de personnes éligible\n      const remiseApplicable = remises.filter(remise => remise.nb_personnes <= nbTotalParticipants).sort((a, b) => b.nb_personnes - a.nb_personnes)[0] || null;\n      setRemiseApplicable(remiseApplicable);\n    }\n  }, [remises, totalParticipants, formData.nbPersonnes]);\n\n  // Calculer le montant avec remise éventuelle\n  useEffect(() => {\n    const montantBase = parseFloat(formData.montant) || 0;\n    let montantFinal = montantBase;\n\n    // Appliquer la remise si applicable\n    if (remiseApplicable) {\n      const remise = montantBase * (remiseApplicable.pourcentage / 100);\n      montantFinal = montantBase - remise;\n    }\n    setMontantAvecRemise(montantFinal);\n  }, [formData.montant, remiseApplicable]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleActiviteChange = e => {\n    setSelectedActivite(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n  const handleMembreChange = e => {\n    setSelectedMembre(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedMembre && !selectedPersonne) {\n      showError('Veuillez sélectionner un participant');\n      return;\n    }\n\n    // Vérifier si nous payons pour un membre ou une personne non-membre\n    const estMembre = !!selectedMembre;\n    if (estMembre && membrePresences.length === 0) {\n      showError('Ce membre n\\'est pas inscrit à cette activité. Veuillez d\\'abord l\\'inscrire avant de procéder au paiement.');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // 1. D'abord, créer les présences anonymes si nécessaire\n      const nbPersonnes = parseInt(formData.nbPersonnes || 0);\n      if (nbPersonnes > 0) {\n        try {\n          await presenceService.createMultipleAnonymousPresences({\n            id_membre_accompagnateur: selectedMembre,\n            id_act: selectedActivite,\n            nombre: nbPersonnes\n          });\n          showSuccess(`${nbPersonnes} personne(s) anonyme(s) ajoutée(s) comme participants`);\n        } catch (error) {\n          console.error('Erreur lors de l\\'ajout des personnes anonymes:', error);\n          showError('Erreur lors de l\\'ajout des personnes anonymes');\n          setLoading(false);\n          return;\n        }\n      }\n\n      // 2. Ensuite, créer le paiement\n      let id_presence_act;\n      if (estMembre) {\n        // Si c'est un membre, utiliser sa présence\n        id_presence_act = membrePresences[0].id;\n      } else {\n        // Si c'est une personne non-membre, nous devons récupérer sa présence\n        const presences = await presenceService.getPresencesByActivite(selectedActivite);\n        const personnePresence = presences.find(p => !p.est_membre && p.id_personne === parseInt(selectedPersonne));\n        if (!personnePresence) {\n          showError('Présence non trouvée pour cette personne');\n          setLoading(false);\n          return;\n        }\n        id_presence_act = personnePresence.id;\n      }\n\n      // Préparer les données de paiement\n      const paiementData = {\n        id_presence_act: id_presence_act,\n        daty: formData.daty,\n        montant: montantAvecRemise // Utiliser le montant avec remise\n      };\n      if (isEditMode) {\n        await paiementService.updatePaiement(id, paiementData);\n        showSuccess('Paiement mis à jour avec succès');\n      } else {\n        if (estMembre) {\n          // C'est un membre, donc utiliser createPaiementMembre\n          await paiementService.createPaiementMembre(paiementData);\n        } else {\n          // C'est une personne non-membre, donc utiliser createPaiementPersonne\n          await paiementService.createPaiementPersonne(paiementData);\n        }\n        showSuccess('Paiement créé avec succès');\n      }\n      navigate('/paiements');\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement du paiement:', error);\n      showError('Erreur lors de l\\'enregistrement du paiement');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paiement-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isEditMode ? 'Modifier le paiement' : 'Nouveau paiement'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"activite\",\n            className: \"form-label\",\n            children: \"Activit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"activite\",\n            className: \"form-select\",\n            value: selectedActivite,\n            onChange: handleActiviteChange,\n            disabled: isEditMode,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une activit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), activites.map(activite => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: activite.id,\n              children: [new Date(activite.daty).toLocaleDateString(), \" - \", activite.description, \" - \", activite.cotisation, \" \\u20AC\"]\n            }, activite.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"membre\",\n            className: \"form-label\",\n            children: \"Membre qui emm\\xE8ne des personnes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"membre\",\n            className: \"form-select\",\n            value: selectedMembre,\n            onChange: handleMembreChange,\n            disabled: isEditMode || !selectedActivite,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner un membre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), membres.map(membre => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: membre.id,\n              children: [membre.nom, \" \", membre.prenom]\n            }, membre.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), membrePresences.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pr\\xE9sence confirm\\xE9e pour cette activit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Le membre \", (_membres$find = membres.find(m => m.id.toString() === selectedMembre)) === null || _membres$find === void 0 ? void 0 : _membres$find.nom, \" \", (_membres$find2 = membres.find(m => m.id.toString() === selectedMembre)) === null || _membres$find2 === void 0 ? void 0 : _membres$find2.prenom, \" est bien inscrit \\xE0 cette activit\\xE9.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), selectedActivite && selectedMembre && membrePresences.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Attention !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ce membre n'est pas inscrit \\xE0 cette activit\\xE9. Veuillez d'abord l'inscrire \\xE0 l'activit\\xE9 avant de proc\\xE9der au paiement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"daty\",\n            className: \"form-label\",\n            children: \"Date de paiement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            id: \"daty\",\n            name: \"daty\",\n            value: formData.daty,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"montant\",\n            className: \"form-label\",\n            children: \"Montant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"form-control\",\n            id: \"montant\",\n            name: \"montant\",\n            value: formData.montant,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nbPersonnes\",\n            className: \"form-label\",\n            children: \"Nombre de personnes amen\\xE9es (sans nom)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            className: \"form-control\",\n            id: \"nbPersonnes\",\n            name: \"nbPersonnes\",\n            value: formData.nbPersonnes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"Ces personnes seront enregistr\\xE9es comme participants anonymes \\xE0 l'activit\\xE9.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), remises.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-info text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-tag-fill me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), \"Remises disponibles\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-sm table-striped\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Nombre de participants\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Pourcentage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: remises.map(remise => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: remiseApplicable && remiseApplicable.id === remise.id ? 'table-success' : '',\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [remise.nb_personnes, \"+\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [remise.pourcentage, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: remise.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 27\n                    }, this)]\n                  }, remise.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nombre total de participants: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-primary\",\n                children: totalParticipants + parseInt(formData.nbPersonnes || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), remiseApplicable && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2 badge bg-success\",\n                children: [\"Remise applicable: \", remiseApplicable.pourcentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), formData.montant && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Montant de base:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), \" \", parseFloat(formData.montant).toLocaleString(), \" Ar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), remiseApplicable && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-warning text-dark\",\n              children: [\"Remise: \", remiseApplicable.pourcentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Montant apr\\xE8s remise:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-success fs-5\",\n              children: [montantAvecRemise.toLocaleString(), \" Ar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => navigate('/paiements'),\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: loading,\n            children: isEditMode ? 'Mettre à jour' : 'Enregistrer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(PaiementForm, \"vKZwFQ7EtOTQZ7QaWLYgszAJo5k=\", false, function () {\n  return [useParams, useNavigate, useLocation, useNotification];\n});\n_c = PaiementForm;\nexport default PaiementForm;\nvar _c;\n$RefreshReg$(_c, \"PaiementForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useLocation","useNotification","paiementService","activiteService","membreService","presenceService","remiseService","jsxDEV","_jsxDEV","PaiementForm","_s","_membres$find","_membres$find2","id","navigate","location","showSuccess","showError","isEditMode","queryParams","URLSearchParams","search","activiteIdFromUrl","get","membreIdFromUrl","personneIdFromUrl","accompagnateurIdFromUrl","loading","setLoading","activites","setActivites","membres","setMembres","membrePresences","setMembrePresences","selectedActivite","setSelectedActivite","selectedMembre","setSelectedMembre","selectedPersonne","setSelectedPersonne","selectedAccompagnateur","setSelectedAccompagnateur","formData","setFormData","id_presence_act","daty","Date","toISOString","split","montant","nbPersonnes","remises","setRemises","remiseApplicable","setRemiseApplicable","totalParticipants","setTotalParticipants","montantAvecRemise","setMontantAvecRemise","fetchActivites","data","getAllActivites","error","console","fetchMembres","getAllMembres","fetchRemises","getAllRemises","fetchPaiement","getPaiementById","id_act","presenceData","getPresenceById","id_membre","fetchMembrePresences","getPresencesByActivite","membrePresencesData","filter","p","parseInt","length","prevFormData","toString","nbTotalParticipants","remise","nb_personnes","sort","a","b","montantBase","parseFloat","montantFinal","pourcentage","handleChange","e","name","value","target","handleActiviteChange","handleMembreChange","handleSubmit","preventDefault","estMembre","createMultipleAnonymousPresences","id_membre_accompagnateur","nombre","presences","personnePresence","find","est_membre","id_personne","paiementData","updatePaiement","createPaiementMembre","createPaiementPersonne","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","disabled","required","map","activite","toLocaleDateString","description","cotisation","membre","nom","prenom","m","type","step","min","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/pages/paiements/PaiementForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport paiementService from '../../services/paiement.service';\nimport activiteService from '../../services/activite.service';\nimport membreService from '../../services/membre.service';\nimport presenceService from '../../services/presence.service';\nimport remiseService from '../../services/remise.service';\nimport './PaiementForm.css';\n\nconst PaiementForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { showSuccess, showError } = useNotification();\n  const isEditMode = !!id;\n  \n  // Récupérer les paramètres de l'URL\n  const queryParams = new URLSearchParams(location.search);\n  const activiteIdFromUrl = queryParams.get('activite');\n  const membreIdFromUrl = queryParams.get('membre');\n  const personneIdFromUrl = queryParams.get('personne');\n  const accompagnateurIdFromUrl = queryParams.get('accompagnateur');\n\n  const [loading, setLoading] = useState(false);\n  const [activites, setActivites] = useState([]);\n  const [membres, setMembres] = useState([]);\n  const [membrePresences, setMembrePresences] = useState([]);\n  const [selectedActivite, setSelectedActivite] = useState(activiteIdFromUrl || '');\n  const [selectedMembre, setSelectedMembre] = useState(membreIdFromUrl || '');\n  const [selectedPersonne, setSelectedPersonne] = useState(personneIdFromUrl || '');\n  const [selectedAccompagnateur, setSelectedAccompagnateur] = useState(accompagnateurIdFromUrl || '');\n  const [formData, setFormData] = useState({\n    id_presence_act: '',\n    daty: new Date().toISOString().split('T')[0],\n    montant: '',\n    nbPersonnes: 0\n  });\n  \n  // États pour les remises\n  const [remises, setRemises] = useState([]);\n  const [remiseApplicable, setRemiseApplicable] = useState(null);\n  const [totalParticipants, setTotalParticipants] = useState(0);\n  \n  // Montant calculé avec remise éventuelle\n  const [montantAvecRemise, setMontantAvecRemise] = useState(0);\n\n  useEffect(() => {\n    const fetchActivites = async () => {\n      try {\n        const data = await activiteService.getAllActivites();\n        setActivites(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des activités:', error);\n        showError('Erreur lors du chargement des activités');\n      }\n    };\n\n    const fetchMembres = async () => {\n      try {\n        const data = await membreService.getAllMembres();\n        setMembres(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des membres:', error);\n        showError('Erreur lors du chargement des membres');\n      }\n    };\n    \n    const fetchRemises = async () => {\n      try {\n        const data = await remiseService.getAllRemises();\n        setRemises(data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des remises:', error);\n        showError('Erreur lors du chargement des remises');\n      }\n    };\n\n    fetchActivites();\n    fetchMembres();\n    fetchRemises();\n\n    if (isEditMode) {\n      const fetchPaiement = async () => {\n        try {\n          setLoading(true);\n          const data = await paiementService.getPaiementById(id);\n          setFormData({\n            id_presence_act: data.id_presence_act,\n            daty: new Date(data.daty).toISOString().split('T')[0],\n            montant: data.montant,\n            nbPersonnes: 0\n          });\n          setSelectedActivite(data.id_act);\n          \n          // Récupérer la présence pour obtenir le membre\n          const presenceData = await presenceService.getPresenceById(data.id_presence_act);\n          if (presenceData && presenceData.id_membre) {\n            setSelectedMembre(presenceData.id_membre);\n          }\n          \n          setLoading(false);\n        } catch (error) {\n          console.error('Erreur lors du chargement du paiement:', error);\n          showError('Erreur lors du chargement du paiement');\n          setLoading(false);\n        }\n      };\n\n      fetchPaiement();\n    }\n  }, [id, isEditMode, showError]);\n\n  useEffect(() => {\n    if (selectedActivite && selectedMembre) {\n      const fetchMembrePresences = async () => {\n        try {\n          // Récupérer les présences du membre pour cette activité\n          const data = await presenceService.getPresencesByActivite(selectedActivite);\n          const membrePresencesData = data.filter(p => p.id_membre === parseInt(selectedMembre));\n          setMembrePresences(membrePresencesData);\n          \n          // Si une seule présence est trouvée, la sélectionner automatiquement\n          if (membrePresencesData.length === 1) {\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              id_presence_act: membrePresencesData[0].id.toString()\n            }));\n          }\n          \n          // Calculer le nombre total de participants pour cette activité\n          setTotalParticipants(data.length + parseInt(formData.nbPersonnes || 0));\n        } catch (error) {\n          console.error('Erreur lors du chargement des présences du membre:', error);\n          showError('Erreur lors du chargement des présences');\n        }\n      };\n      \n      fetchMembrePresences();\n    } else {\n      setMembrePresences([]);\n    }\n  }, [selectedActivite, selectedMembre, formData.nbPersonnes, showError]);\n\n  // Déterminer la remise applicable en fonction du nombre total de participants\n  useEffect(() => {\n    if (remises.length > 0) {\n      // Nombre total de participants = participants existants + nouvelles personnes anonymes\n      const nbTotalParticipants = totalParticipants + parseInt(formData.nbPersonnes || 0);\n      \n      // Trouver la remise applicable avec le plus grand nombre de personnes éligible\n      const remiseApplicable = remises\n        .filter(remise => remise.nb_personnes <= nbTotalParticipants)\n        .sort((a, b) => b.nb_personnes - a.nb_personnes)[0] || null;\n      \n      setRemiseApplicable(remiseApplicable);\n    }\n  }, [remises, totalParticipants, formData.nbPersonnes]);\n  \n  // Calculer le montant avec remise éventuelle\n  useEffect(() => {\n    const montantBase = parseFloat(formData.montant) || 0;\n    let montantFinal = montantBase;\n    \n    // Appliquer la remise si applicable\n    if (remiseApplicable) {\n      const remise = montantBase * (remiseApplicable.pourcentage / 100);\n      montantFinal = montantBase - remise;\n    }\n    \n    setMontantAvecRemise(montantFinal);\n  }, [formData.montant, remiseApplicable]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleActiviteChange = (e) => {\n    setSelectedActivite(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n\n  const handleMembreChange = (e) => {\n    setSelectedMembre(e.target.value);\n    setFormData({\n      ...formData,\n      id_presence_act: ''\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedMembre && !selectedPersonne) {\n      showError('Veuillez sélectionner un participant');\n      return;\n    }\n    \n    // Vérifier si nous payons pour un membre ou une personne non-membre\n    const estMembre = !!selectedMembre;\n    \n    if (estMembre && membrePresences.length === 0) {\n      showError('Ce membre n\\'est pas inscrit à cette activité. Veuillez d\\'abord l\\'inscrire avant de procéder au paiement.');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      // 1. D'abord, créer les présences anonymes si nécessaire\n      const nbPersonnes = parseInt(formData.nbPersonnes || 0);\n      if (nbPersonnes > 0) {\n        try {\n          await presenceService.createMultipleAnonymousPresences({\n            id_membre_accompagnateur: selectedMembre,\n            id_act: selectedActivite,\n            nombre: nbPersonnes\n          });\n          showSuccess(`${nbPersonnes} personne(s) anonyme(s) ajoutée(s) comme participants`);\n        } catch (error) {\n          console.error('Erreur lors de l\\'ajout des personnes anonymes:', error);\n          showError('Erreur lors de l\\'ajout des personnes anonymes');\n          setLoading(false);\n          return;\n        }\n      }\n      \n      // 2. Ensuite, créer le paiement\n      let id_presence_act;\n      \n      if (estMembre) {\n        // Si c'est un membre, utiliser sa présence\n        id_presence_act = membrePresences[0].id;\n      } else {\n        // Si c'est une personne non-membre, nous devons récupérer sa présence\n        const presences = await presenceService.getPresencesByActivite(selectedActivite);\n        const personnePresence = presences.find(p => \n          !p.est_membre && p.id_personne === parseInt(selectedPersonne)\n        );\n        \n        if (!personnePresence) {\n          showError('Présence non trouvée pour cette personne');\n          setLoading(false);\n          return;\n        }\n        \n        id_presence_act = personnePresence.id;\n      }\n      \n      // Préparer les données de paiement\n      const paiementData = {\n        id_presence_act: id_presence_act,\n        daty: formData.daty,\n        montant: montantAvecRemise // Utiliser le montant avec remise\n      };\n\n      if (isEditMode) {\n        await paiementService.updatePaiement(id, paiementData);\n        showSuccess('Paiement mis à jour avec succès');\n      } else {\n        if (estMembre) {\n          // C'est un membre, donc utiliser createPaiementMembre\n          await paiementService.createPaiementMembre(paiementData);\n        } else {\n          // C'est une personne non-membre, donc utiliser createPaiementPersonne\n          await paiementService.createPaiementPersonne(paiementData);\n        }\n        showSuccess('Paiement créé avec succès');\n      }\n      \n      navigate('/paiements');\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement du paiement:', error);\n      showError('Erreur lors de l\\'enregistrement du paiement');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Chargement...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"paiement-form\">\n      <h1>{isEditMode ? 'Modifier le paiement' : 'Nouveau paiement'}</h1>\n      \n      <form onSubmit={handleSubmit} className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"activite\" className=\"form-label\">Activité</label>\n            <select\n              id=\"activite\"\n              className=\"form-select\"\n              value={selectedActivite}\n              onChange={handleActiviteChange}\n              disabled={isEditMode}\n              required\n            >\n              <option value=\"\">Sélectionner une activité</option>\n              {activites.map(activite => (\n                <option key={activite.id} value={activite.id}>\n                  {new Date(activite.daty).toLocaleDateString()} - {activite.description} - {activite.cotisation} €\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"membre\" className=\"form-label\">Membre qui emmène des personnes</label>\n            <select\n              id=\"membre\"\n              className=\"form-select\"\n              value={selectedMembre}\n              onChange={handleMembreChange}\n              disabled={isEditMode || !selectedActivite}\n              required\n            >\n              <option value=\"\">Sélectionner un membre</option>\n              {membres.map(membre => (\n                <option key={membre.id} value={membre.id}>\n                  {membre.nom} {membre.prenom}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {membrePresences.length > 0 && (\n            <div className=\"alert alert-info\">\n              <p><strong>Présence confirmée pour cette activité</strong></p>\n              <p>Le membre {membres.find(m => m.id.toString() === selectedMembre)?.nom} {membres.find(m => m.id.toString() === selectedMembre)?.prenom} est bien inscrit à cette activité.</p>\n            </div>\n          )}\n          \n          {selectedActivite && selectedMembre && membrePresences.length === 0 && (\n            <div className=\"alert alert-warning\">\n              <p><strong>Attention !</strong></p>\n              <p>Ce membre n'est pas inscrit à cette activité. Veuillez d'abord l'inscrire à l'activité avant de procéder au paiement.</p>\n            </div>\n          )}\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"daty\" className=\"form-label\">Date de paiement</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"daty\"\n              name=\"daty\"\n              value={formData.daty}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"montant\" className=\"form-label\">Montant</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"form-control\"\n              id=\"montant\"\n              name=\"montant\"\n              value={formData.montant}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"nbPersonnes\" className=\"form-label\">Nombre de personnes amenées (sans nom)</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"nbPersonnes\"\n              name=\"nbPersonnes\"\n              value={formData.nbPersonnes}\n              onChange={handleChange}\n            />\n            <small className=\"form-text text-muted\">\n              Ces personnes seront enregistrées comme participants anonymes à l'activité.\n            </small>\n          </div>\n          \n          {remises.length > 0 && (\n            <div className=\"card mb-3\">\n              <div className=\"card-header bg-info text-white\">\n                <i className=\"bi bi-tag-fill me-2\"></i>\n                Remises disponibles\n              </div>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-striped\">\n                    <thead>\n                      <tr>\n                        <th>Nombre de participants</th>\n                        <th>Pourcentage</th>\n                        <th>Description</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {remises.map(remise => (\n                        <tr key={remise.id} className={remiseApplicable && remiseApplicable.id === remise.id ? 'table-success' : ''}>\n                          <td>{remise.nb_personnes}+</td>\n                          <td>{remise.pourcentage}%</td>\n                          <td>{remise.description}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                \n                <div className=\"mt-2\">\n                  <strong>Nombre total de participants: </strong>\n                  <span className=\"badge bg-primary\">\n                    {totalParticipants + parseInt(formData.nbPersonnes || 0)}\n                  </span>\n                  {remiseApplicable && (\n                    <span className=\"ms-2 badge bg-success\">\n                      Remise applicable: {remiseApplicable.pourcentage}%\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {formData.montant && (\n            <div className=\"alert alert-info\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <span>\n                  <strong>Montant de base:</strong> {parseFloat(formData.montant).toLocaleString()} Ar\n                </span>\n                {remiseApplicable && (\n                  <span className=\"badge bg-warning text-dark\">\n                    Remise: {remiseApplicable.pourcentage}%\n                  </span>\n                )}\n              </div>\n              <hr />\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <strong>Montant après remise:</strong>\n                <span className=\"badge bg-success fs-5\">\n                  {montantAvecRemise.toLocaleString()} Ar\n                </span>\n              </div>\n            </div>\n          )}\n\n          <div className=\"d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={() => navigate('/paiements')}\n            >\n              Annuler\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={loading}\n            >\n              {isEditMode ? 'Mettre à jour' : 'Enregistrer'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PaiementForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SAASC,eAAe,QAAQ,oCAAoC;AACpE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,cAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB,WAAW;IAAEC;EAAU,CAAC,GAAGhB,eAAe,CAAC,CAAC;EACpD,MAAMiB,UAAU,GAAG,CAAC,CAACL,EAAE;;EAEvB;EACA,MAAMM,WAAW,GAAG,IAAIC,eAAe,CAACL,QAAQ,CAACM,MAAM,CAAC;EACxD,MAAMC,iBAAiB,GAAGH,WAAW,CAACI,GAAG,CAAC,UAAU,CAAC;EACrD,MAAMC,eAAe,GAAGL,WAAW,CAACI,GAAG,CAAC,QAAQ,CAAC;EACjD,MAAME,iBAAiB,GAAGN,WAAW,CAACI,GAAG,CAAC,UAAU,CAAC;EACrD,MAAMG,uBAAuB,GAAGP,WAAW,CAACI,GAAG,CAAC,gBAAgB,CAAC;EAEjE,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC0B,iBAAiB,IAAI,EAAE,CAAC;EACjF,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC4B,eAAe,IAAI,EAAE,CAAC;EAC3E,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5C,QAAQ,CAAC6B,iBAAiB,IAAI,EAAE,CAAC;EACjF,MAAM,CAACgB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG9C,QAAQ,CAAC8B,uBAAuB,IAAI,EAAE,CAAC;EACnG,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC;IACvCiD,eAAe,EAAE,EAAE;IACnBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5CC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC4D,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7D,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACA,MAAM,CAAC8D,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/D,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAM+D,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAM1D,eAAe,CAAC2D,eAAe,CAAC,CAAC;QACpDhC,YAAY,CAAC+B,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAChE9C,SAAS,CAAC,yCAAyC,CAAC;MACtD;IACF,CAAC;IAED,MAAMgD,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMJ,IAAI,GAAG,MAAMzD,aAAa,CAAC8D,aAAa,CAAC,CAAC;QAChDlC,UAAU,CAAC6B,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D9C,SAAS,CAAC,uCAAuC,CAAC;MACpD;IACF,CAAC;IAED,MAAMkD,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMN,IAAI,GAAG,MAAMvD,aAAa,CAAC8D,aAAa,CAAC,CAAC;QAChDf,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D9C,SAAS,CAAC,uCAAuC,CAAC;MACpD;IACF,CAAC;IAED2C,cAAc,CAAC,CAAC;IAChBK,YAAY,CAAC,CAAC;IACdE,YAAY,CAAC,CAAC;IAEd,IAAIjD,UAAU,EAAE;MACd,MAAMmD,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,IAAI;UACFzC,UAAU,CAAC,IAAI,CAAC;UAChB,MAAMiC,IAAI,GAAG,MAAM3D,eAAe,CAACoE,eAAe,CAACzD,EAAE,CAAC;UACtD+B,WAAW,CAAC;YACVC,eAAe,EAAEgB,IAAI,CAAChB,eAAe;YACrCC,IAAI,EAAE,IAAIC,IAAI,CAACc,IAAI,CAACf,IAAI,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACrDC,OAAO,EAAEW,IAAI,CAACX,OAAO;YACrBC,WAAW,EAAE;UACf,CAAC,CAAC;UACFf,mBAAmB,CAACyB,IAAI,CAACU,MAAM,CAAC;;UAEhC;UACA,MAAMC,YAAY,GAAG,MAAMnE,eAAe,CAACoE,eAAe,CAACZ,IAAI,CAAChB,eAAe,CAAC;UAChF,IAAI2B,YAAY,IAAIA,YAAY,CAACE,SAAS,EAAE;YAC1CpC,iBAAiB,CAACkC,YAAY,CAACE,SAAS,CAAC;UAC3C;UAEA9C,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC,OAAOmC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;UAC9D9C,SAAS,CAAC,uCAAuC,CAAC;UAClDW,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAEDyC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACxD,EAAE,EAAEK,UAAU,EAAED,SAAS,CAAC,CAAC;EAE/BpB,SAAS,CAAC,MAAM;IACd,IAAIsC,gBAAgB,IAAIE,cAAc,EAAE;MACtC,MAAMsC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;QACvC,IAAI;UACF;UACA,MAAMd,IAAI,GAAG,MAAMxD,eAAe,CAACuE,sBAAsB,CAACzC,gBAAgB,CAAC;UAC3E,MAAM0C,mBAAmB,GAAGhB,IAAI,CAACiB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,SAAS,KAAKM,QAAQ,CAAC3C,cAAc,CAAC,CAAC;UACtFH,kBAAkB,CAAC2C,mBAAmB,CAAC;;UAEvC;UACA,IAAIA,mBAAmB,CAACI,MAAM,KAAK,CAAC,EAAE;YACpCrC,WAAW,CAACsC,YAAY,KAAK;cAC3B,GAAGA,YAAY;cACfrC,eAAe,EAAEgC,mBAAmB,CAAC,CAAC,CAAC,CAAChE,EAAE,CAACsE,QAAQ,CAAC;YACtD,CAAC,CAAC,CAAC;UACL;;UAEA;UACA1B,oBAAoB,CAACI,IAAI,CAACoB,MAAM,GAAGD,QAAQ,CAACrC,QAAQ,CAACQ,WAAW,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;UAC1E9C,SAAS,CAAC,yCAAyC,CAAC;QACtD;MACF,CAAC;MAED0D,oBAAoB,CAAC,CAAC;IACxB,CAAC,MAAM;MACLzC,kBAAkB,CAAC,EAAE,CAAC;IACxB;EACF,CAAC,EAAE,CAACC,gBAAgB,EAAEE,cAAc,EAAEM,QAAQ,CAACQ,WAAW,EAAElC,SAAS,CAAC,CAAC;;EAEvE;EACApB,SAAS,CAAC,MAAM;IACd,IAAIuD,OAAO,CAAC6B,MAAM,GAAG,CAAC,EAAE;MACtB;MACA,MAAMG,mBAAmB,GAAG5B,iBAAiB,GAAGwB,QAAQ,CAACrC,QAAQ,CAACQ,WAAW,IAAI,CAAC,CAAC;;MAEnF;MACA,MAAMG,gBAAgB,GAAGF,OAAO,CAC7B0B,MAAM,CAACO,MAAM,IAAIA,MAAM,CAACC,YAAY,IAAIF,mBAAmB,CAAC,CAC5DG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACH,YAAY,GAAGE,CAAC,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;MAE7D/B,mBAAmB,CAACD,gBAAgB,CAAC;IACvC;EACF,CAAC,EAAE,CAACF,OAAO,EAAEI,iBAAiB,EAAEb,QAAQ,CAACQ,WAAW,CAAC,CAAC;;EAEtD;EACAtD,SAAS,CAAC,MAAM;IACd,MAAM6F,WAAW,GAAGC,UAAU,CAAChD,QAAQ,CAACO,OAAO,CAAC,IAAI,CAAC;IACrD,IAAI0C,YAAY,GAAGF,WAAW;;IAE9B;IACA,IAAIpC,gBAAgB,EAAE;MACpB,MAAM+B,MAAM,GAAGK,WAAW,IAAIpC,gBAAgB,CAACuC,WAAW,GAAG,GAAG,CAAC;MACjED,YAAY,GAAGF,WAAW,GAAGL,MAAM;IACrC;IAEA1B,oBAAoB,CAACiC,YAAY,CAAC;EACpC,CAAC,EAAE,CAACjD,QAAQ,CAACO,OAAO,EAAEI,gBAAgB,CAAC,CAAC;EAExC,MAAMwC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCtD,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACqD,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,oBAAoB,GAAIJ,CAAC,IAAK;IAClC3D,mBAAmB,CAAC2D,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;IACnCrD,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXE,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMuD,kBAAkB,GAAIL,CAAC,IAAK;IAChCzD,iBAAiB,CAACyD,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;IACjCrD,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXE,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMwD,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAElB,IAAI,CAACjE,cAAc,IAAI,CAACE,gBAAgB,EAAE;MACxCtB,SAAS,CAAC,sCAAsC,CAAC;MACjD;IACF;;IAEA;IACA,MAAMsF,SAAS,GAAG,CAAC,CAAClE,cAAc;IAElC,IAAIkE,SAAS,IAAItE,eAAe,CAACgD,MAAM,KAAK,CAAC,EAAE;MAC7ChE,SAAS,CAAC,6GAA6G,CAAC;MACxH;IACF;IAEA,IAAI;MACFW,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMuB,WAAW,GAAG6B,QAAQ,CAACrC,QAAQ,CAACQ,WAAW,IAAI,CAAC,CAAC;MACvD,IAAIA,WAAW,GAAG,CAAC,EAAE;QACnB,IAAI;UACF,MAAM9C,eAAe,CAACmG,gCAAgC,CAAC;YACrDC,wBAAwB,EAAEpE,cAAc;YACxCkC,MAAM,EAAEpC,gBAAgB;YACxBuE,MAAM,EAAEvD;UACV,CAAC,CAAC;UACFnC,WAAW,CAAC,GAAGmC,WAAW,uDAAuD,CAAC;QACpF,CAAC,CAAC,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;UACvE9C,SAAS,CAAC,gDAAgD,CAAC;UAC3DW,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;MACF;;MAEA;MACA,IAAIiB,eAAe;MAEnB,IAAI0D,SAAS,EAAE;QACb;QACA1D,eAAe,GAAGZ,eAAe,CAAC,CAAC,CAAC,CAACpB,EAAE;MACzC,CAAC,MAAM;QACL;QACA,MAAM8F,SAAS,GAAG,MAAMtG,eAAe,CAACuE,sBAAsB,CAACzC,gBAAgB,CAAC;QAChF,MAAMyE,gBAAgB,GAAGD,SAAS,CAACE,IAAI,CAAC9B,CAAC,IACvC,CAACA,CAAC,CAAC+B,UAAU,IAAI/B,CAAC,CAACgC,WAAW,KAAK/B,QAAQ,CAACzC,gBAAgB,CAC9D,CAAC;QAED,IAAI,CAACqE,gBAAgB,EAAE;UACrB3F,SAAS,CAAC,0CAA0C,CAAC;UACrDW,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAEAiB,eAAe,GAAG+D,gBAAgB,CAAC/F,EAAE;MACvC;;MAEA;MACA,MAAMmG,YAAY,GAAG;QACnBnE,eAAe,EAAEA,eAAe;QAChCC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBI,OAAO,EAAEQ,iBAAiB,CAAC;MAC7B,CAAC;MAED,IAAIxC,UAAU,EAAE;QACd,MAAMhB,eAAe,CAAC+G,cAAc,CAACpG,EAAE,EAAEmG,YAAY,CAAC;QACtDhG,WAAW,CAAC,iCAAiC,CAAC;MAChD,CAAC,MAAM;QACL,IAAIuF,SAAS,EAAE;UACb;UACA,MAAMrG,eAAe,CAACgH,oBAAoB,CAACF,YAAY,CAAC;QAC1D,CAAC,MAAM;UACL;UACA,MAAM9G,eAAe,CAACiH,sBAAsB,CAACH,YAAY,CAAC;QAC5D;QACAhG,WAAW,CAAC,2BAA2B,CAAC;MAC1C;MAEAF,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrE9C,SAAS,CAAC,8CAA8C,CAAC;IAC3D,CAAC,SAAS;MACRW,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBACEnB,OAAA;MAAK4G,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5C7G,OAAA;QAAK4G,SAAS,EAAC,gBAAgB;QAACE,IAAI,EAAC,QAAQ;QAAAD,QAAA,eAC3C7G,OAAA;UAAM4G,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACElH,OAAA;IAAK4G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B7G,OAAA;MAAA6G,QAAA,EAAKnG,UAAU,GAAG,sBAAsB,GAAG;IAAkB;MAAAqG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEnElH,OAAA;MAAMmH,QAAQ,EAAEtB,YAAa;MAACe,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC5C7G,OAAA;QAAK4G,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB7G,OAAA;UAAK4G,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB7G,OAAA;YAAOoH,OAAO,EAAC,UAAU;YAACR,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjElH,OAAA;YACEK,EAAE,EAAC,UAAU;YACbuG,SAAS,EAAC,aAAa;YACvBnB,KAAK,EAAE9D,gBAAiB;YACxB0F,QAAQ,EAAE1B,oBAAqB;YAC/B2B,QAAQ,EAAE5G,UAAW;YACrB6G,QAAQ;YAAAV,QAAA,gBAER7G,OAAA;cAAQyF,KAAK,EAAC,EAAE;cAAAoB,QAAA,EAAC;YAAyB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAClD7F,SAAS,CAACmG,GAAG,CAACC,QAAQ,iBACrBzH,OAAA;cAA0ByF,KAAK,EAAEgC,QAAQ,CAACpH,EAAG;cAAAwG,QAAA,GAC1C,IAAItE,IAAI,CAACkF,QAAQ,CAACnF,IAAI,CAAC,CAACoF,kBAAkB,CAAC,CAAC,EAAC,KAAG,EAACD,QAAQ,CAACE,WAAW,EAAC,KAAG,EAACF,QAAQ,CAACG,UAAU,EAAC,SACjG;YAAA,GAFaH,QAAQ,CAACpH,EAAE;cAAA0G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENlH,OAAA;UAAK4G,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB7G,OAAA;YAAOoH,OAAO,EAAC,QAAQ;YAACR,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA+B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtFlH,OAAA;YACEK,EAAE,EAAC,QAAQ;YACXuG,SAAS,EAAC,aAAa;YACvBnB,KAAK,EAAE5D,cAAe;YACtBwF,QAAQ,EAAEzB,kBAAmB;YAC7B0B,QAAQ,EAAE5G,UAAU,IAAI,CAACiB,gBAAiB;YAC1C4F,QAAQ;YAAAV,QAAA,gBAER7G,OAAA;cAAQyF,KAAK,EAAC,EAAE;cAAAoB,QAAA,EAAC;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/C3F,OAAO,CAACiG,GAAG,CAACK,MAAM,iBACjB7H,OAAA;cAAwByF,KAAK,EAAEoC,MAAM,CAACxH,EAAG;cAAAwG,QAAA,GACtCgB,MAAM,CAACC,GAAG,EAAC,GAAC,EAACD,MAAM,CAACE,MAAM;YAAA,GADhBF,MAAM,CAACxH,EAAE;cAAA0G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEd,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELzF,eAAe,CAACgD,MAAM,GAAG,CAAC,iBACzBzE,OAAA;UAAK4G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B7G,OAAA;YAAA6G,QAAA,eAAG7G,OAAA;cAAA6G,QAAA,EAAQ;YAAsC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9DlH,OAAA;YAAA6G,QAAA,GAAG,YAAU,GAAA1G,aAAA,GAACoB,OAAO,CAAC8E,IAAI,CAAC2B,CAAC,IAAIA,CAAC,CAAC3H,EAAE,CAACsE,QAAQ,CAAC,CAAC,KAAK9C,cAAc,CAAC,cAAA1B,aAAA,uBAArDA,aAAA,CAAuD2H,GAAG,EAAC,GAAC,GAAA1H,cAAA,GAACmB,OAAO,CAAC8E,IAAI,CAAC2B,CAAC,IAAIA,CAAC,CAAC3H,EAAE,CAACsE,QAAQ,CAAC,CAAC,KAAK9C,cAAc,CAAC,cAAAzB,cAAA,uBAArDA,cAAA,CAAuD2H,MAAM,EAAC,2CAAmC;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7K,CACN,EAEAvF,gBAAgB,IAAIE,cAAc,IAAIJ,eAAe,CAACgD,MAAM,KAAK,CAAC,iBACjEzE,OAAA;UAAK4G,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC7G,OAAA;YAAA6G,QAAA,eAAG7G,OAAA;cAAA6G,QAAA,EAAQ;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnClH,OAAA;YAAA6G,QAAA,EAAG;UAAqH;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CACN,eAEDlH,OAAA;UAAK4G,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB7G,OAAA;YAAOoH,OAAO,EAAC,MAAM;YAACR,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrElH,OAAA;YACEiI,IAAI,EAAC,MAAM;YACXrB,SAAS,EAAC,cAAc;YACxBvG,EAAE,EAAC,MAAM;YACTmF,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEtD,QAAQ,CAACG,IAAK;YACrB+E,QAAQ,EAAE/B,YAAa;YACvBiC,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENlH,OAAA;UAAK4G,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB7G,OAAA;YAAOoH,OAAO,EAAC,SAAS;YAACR,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DlH,OAAA;YACEiI,IAAI,EAAC,QAAQ;YACbC,IAAI,EAAC,MAAM;YACXtB,SAAS,EAAC,cAAc;YACxBvG,EAAE,EAAC,SAAS;YACZmF,IAAI,EAAC,SAAS;YACdC,KAAK,EAAEtD,QAAQ,CAACO,OAAQ;YACxB2E,QAAQ,EAAE/B,YAAa;YACvBiC,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENlH,OAAA;UAAK4G,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB7G,OAAA;YAAOoH,OAAO,EAAC,aAAa;YAACR,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAsC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClGlH,OAAA;YACEiI,IAAI,EAAC,QAAQ;YACbE,GAAG,EAAC,GAAG;YACPvB,SAAS,EAAC,cAAc;YACxBvG,EAAE,EAAC,aAAa;YAChBmF,IAAI,EAAC,aAAa;YAClBC,KAAK,EAAEtD,QAAQ,CAACQ,WAAY;YAC5B0E,QAAQ,EAAE/B;UAAa;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFlH,OAAA;YAAO4G,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAExC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAELtE,OAAO,CAAC6B,MAAM,GAAG,CAAC,iBACjBzE,OAAA;UAAK4G,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB7G,OAAA;YAAK4G,SAAS,EAAC,gCAAgC;YAAAC,QAAA,gBAC7C7G,OAAA;cAAG4G,SAAS,EAAC;YAAqB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,uBAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNlH,OAAA;YAAK4G,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB7G,OAAA;cAAK4G,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC/B7G,OAAA;gBAAO4G,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,gBAC7C7G,OAAA;kBAAA6G,QAAA,eACE7G,OAAA;oBAAA6G,QAAA,gBACE7G,OAAA;sBAAA6G,QAAA,EAAI;oBAAsB;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC/BlH,OAAA;sBAAA6G,QAAA,EAAI;oBAAW;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACpBlH,OAAA;sBAAA6G,QAAA,EAAI;oBAAW;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACRlH,OAAA;kBAAA6G,QAAA,EACGjE,OAAO,CAAC4E,GAAG,CAAC3C,MAAM,iBACjB7E,OAAA;oBAAoB4G,SAAS,EAAE9D,gBAAgB,IAAIA,gBAAgB,CAACzC,EAAE,KAAKwE,MAAM,CAACxE,EAAE,GAAG,eAAe,GAAG,EAAG;oBAAAwG,QAAA,gBAC1G7G,OAAA;sBAAA6G,QAAA,GAAKhC,MAAM,CAACC,YAAY,EAAC,GAAC;oBAAA;sBAAAiC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC/BlH,OAAA;sBAAA6G,QAAA,GAAKhC,MAAM,CAACQ,WAAW,EAAC,GAAC;oBAAA;sBAAA0B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC9BlH,OAAA;sBAAA6G,QAAA,EAAKhC,MAAM,CAAC8C;oBAAW;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA,GAHtBrC,MAAM,CAACxE,EAAE;oBAAA0G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAId,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENlH,OAAA;cAAK4G,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB7G,OAAA;gBAAA6G,QAAA,EAAQ;cAA8B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC/ClH,OAAA;gBAAM4G,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC/B7D,iBAAiB,GAAGwB,QAAQ,CAACrC,QAAQ,CAACQ,WAAW,IAAI,CAAC;cAAC;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,EACNpE,gBAAgB,iBACf9C,OAAA;gBAAM4G,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAC,qBACnB,EAAC/D,gBAAgB,CAACuC,WAAW,EAAC,GACnD;cAAA;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACP;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEA/E,QAAQ,CAACO,OAAO,iBACf1C,OAAA;UAAK4G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B7G,OAAA;YAAK4G,SAAS,EAAC,mDAAmD;YAAAC,QAAA,gBAChE7G,OAAA;cAAA6G,QAAA,gBACE7G,OAAA;gBAAA6G,QAAA,EAAQ;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC/B,UAAU,CAAChD,QAAQ,CAACO,OAAO,CAAC,CAAC0F,cAAc,CAAC,CAAC,EAAC,KACnF;YAAA;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACNpE,gBAAgB,iBACf9C,OAAA;cAAM4G,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,UACnC,EAAC/D,gBAAgB,CAACuC,WAAW,EAAC,GACxC;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNlH,OAAA;YAAA+G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNlH,OAAA;YAAK4G,SAAS,EAAC,mDAAmD;YAAAC,QAAA,gBAChE7G,OAAA;cAAA6G,QAAA,EAAQ;YAAqB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtClH,OAAA;cAAM4G,SAAS,EAAC,uBAAuB;cAAAC,QAAA,GACpC3D,iBAAiB,CAACkF,cAAc,CAAC,CAAC,EAAC,KACtC;YAAA;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDlH,OAAA;UAAK4G,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7C7G,OAAA;YACEiI,IAAI,EAAC,QAAQ;YACbrB,SAAS,EAAC,mBAAmB;YAC7ByB,OAAO,EAAEA,CAAA,KAAM/H,QAAQ,CAAC,YAAY,CAAE;YAAAuG,QAAA,EACvC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlH,OAAA;YACEiI,IAAI,EAAC,QAAQ;YACbrB,SAAS,EAAC,iBAAiB;YAC3BU,QAAQ,EAAEnG,OAAQ;YAAA0F,QAAA,EAEjBnG,UAAU,GAAG,eAAe,GAAG;UAAa;YAAAqG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChH,EAAA,CAxdID,YAAY;EAAA,QACDV,SAAS,EACPD,WAAW,EACXE,WAAW,EACOC,eAAe;AAAA;AAAA6I,EAAA,GAJ9CrI,YAAY;AA0dlB,eAAeA,YAAY;AAAC,IAAAqI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}