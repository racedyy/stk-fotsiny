{"ast":null,"code":"import axios from 'axios';\nimport API_BASE_URL from './api.config';\nconst API_URL = `${API_BASE_URL}/presences`;\n\n// Récupérer toutes les présences\nconst getAllPresences = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer une présence par ID\nconst getPresenceById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Créer une nouvelle présence pour un membre\nconst createPresenceMembre = async presenceData => {\n  try {\n    const response = await axios.post(`${API_URL}/membre`, presenceData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Créer une nouvelle présence pour une personne non-membre\nconst createPresencePersonne = async presenceData => {\n  try {\n    const response = await axios.post(`${API_URL}/personne`, presenceData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Supprimer une présence\nconst deletePresence = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst presenceService = {\n  getAllPresences,\n  getPresenceById,\n  createPresenceMembre,\n  createPresencePersonne,\n  deletePresence\n};\nexport default presenceService;","map":{"version":3,"names":["axios","API_BASE_URL","API_URL","getAllPresences","response","get","data","error","getPresenceById","id","createPresenceMembre","presenceData","post","createPresencePersonne","deletePresence","delete","presenceService"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/services/presence.service.js"],"sourcesContent":["import axios from 'axios';\nimport API_BASE_URL from './api.config';\n\nconst API_URL = `${API_BASE_URL}/presences`;\n\n// Récupérer toutes les présences\nconst getAllPresences = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Récupérer une présence par ID\nconst getPresenceById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Créer une nouvelle présence pour un membre\nconst createPresenceMembre = async (presenceData) => {\n  try {\n    const response = await axios.post(`${API_URL}/membre`, presenceData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Créer une nouvelle présence pour une personne non-membre\nconst createPresencePersonne = async (presenceData) => {\n  try {\n    const response = await axios.post(`${API_URL}/personne`, presenceData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Supprimer une présence\nconst deletePresence = async (id) => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst presenceService = {\n  getAllPresences,\n  getPresenceById,\n  createPresenceMembre,\n  createPresencePersonne,\n  deletePresence\n};\n\nexport default presenceService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AAEvC,MAAMC,OAAO,GAAG,GAAGD,YAAY,YAAY;;AAE3C;AACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG,MAAOC,EAAE,IAAK;EACpC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGH,OAAO,IAAIO,EAAE,EAAE,CAAC;IACpD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMG,oBAAoB,GAAG,MAAOC,YAAY,IAAK;EACnD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAI,CAAC,GAAGV,OAAO,SAAS,EAAES,YAAY,CAAC;IACpE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMM,sBAAsB,GAAG,MAAOF,YAAY,IAAK;EACrD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAI,CAAC,GAAGV,OAAO,WAAW,EAAES,YAAY,CAAC;IACtE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMO,cAAc,GAAG,MAAOL,EAAE,IAAK;EACnC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACe,MAAM,CAAC,GAAGb,OAAO,IAAIO,EAAE,EAAE,CAAC;IACvD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMS,eAAe,GAAG;EACtBb,eAAe;EACfK,eAAe;EACfE,oBAAoB;EACpBG,sBAAsB;EACtBC;AACF,CAAC;AAED,eAAeE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}