{"ast":null,"code":"var _jsxFileName = \"D:\\\\itucedric\\\\L3\\\\S6\\\\rattrap S4\\\\prog\\\\ex_react\\\\stkkk\\\\frontend\\\\src\\\\pages\\\\activites\\\\ActiviteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport activiteService from '../../services/activite.service';\nimport constanteService from '../../services/constante.service';\nimport Spinner from '../../components/common/Spinner';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActiviteForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditMode = !!id;\n  const [formData, setFormData] = useState({\n    daty: new Date().toISOString().split('T')[0],\n    description: '',\n    priorite: '3',\n    region: '',\n    cotisation: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const {\n    showError,\n    showSuccess\n  } = useNotification();\n  const [constante, setConstante] = useState(null);\n  const [cotisationAuto, setCotisationAuto] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Récupérer les constantes\n        const constantes = await constanteService.getAllConstantes();\n        if (constantes.length > 0) {\n          setConstante(constantes[0]);\n        }\n        if (isEditMode) {\n          const activiteData = await activiteService.getActiviteById(id);\n          setFormData({\n            daty: activiteData.daty ? new Date(activiteData.daty).toISOString().split('T')[0] : '',\n            description: activiteData.description,\n            priorite: activiteData.priorite.toString(),\n            region: activiteData.region,\n            cotisation: activiteData.cotisation\n          });\n          setCotisationAuto(false); // En mode édition, on ne force pas la cotisation automatique\n        } else {\n          // Pour un nouveau formulaire, vérifier s'il y a un paramètre de région dans l'URL\n          const urlParams = new URLSearchParams(window.location.search);\n          const regionParam = urlParams.get('region');\n          if (regionParam) {\n            setFormData(prevState => ({\n              ...prevState,\n              region: regionParam\n            }));\n          }\n\n          // Définir la cotisation par défaut en fonction de la priorité\n          if (constantes.length > 0) {\n            const defaultPriorite = 3; // Priorité par défaut\n            const cotisationValue = getCotisationFromPriorite(defaultPriorite, constantes[0]);\n            setFormData(prevState => ({\n              ...prevState,\n              cotisation: cotisationValue\n            }));\n          }\n        }\n      } catch (err) {\n        console.error('Erreur lors du chargement des données:', err);\n        showError('Erreur lors du chargement des données. Veuillez réessayer plus tard.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, isEditMode]);\n\n  // Fonction pour calculer la cotisation en fonction de la priorité et des constantes\n  const getCotisationFromPriorite = (priorite, constante) => {\n    if (!constante) return '';\n    const {\n      cotisation_inf,\n      cotisation_sup\n    } = constante;\n    const ratio = (priorite - 1) / 9; // Priorité de 1 à 10 normalisée entre 0 et 1\n    const cotisation = cotisation_inf + ratio * (cotisation_sup - cotisation_inf);\n    return Math.round(cotisation); // Arrondir à l'entier le plus proche\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'priorite' && cotisationAuto && constante) {\n      // Si la priorité change et que la cotisation est automatique, mettre à jour la cotisation\n      const newPriorite = parseInt(value);\n      const newCotisation = getCotisationFromPriorite(newPriorite, constante);\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value,\n        cotisation: newCotisation\n      }));\n    } else {\n      // Sinon, mettre à jour normalement\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n\n      // Si l'utilisateur modifie manuellement la cotisation, désactiver le mode automatique\n      if (name === 'cotisation') {\n        setCotisationAuto(false);\n      }\n    }\n  };\n\n  // Fonction pour réactiver le mode cotisation automatique\n  const handleResetCotisation = () => {\n    if (constante) {\n      const priorite = parseInt(formData.priorite);\n      const newCotisation = getCotisationFromPriorite(priorite, constante);\n      setFormData(prevState => ({\n        ...prevState,\n        cotisation: newCotisation\n      }));\n      setCotisationAuto(true);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation de base\n    if (!formData.daty || !formData.description || !formData.region || !formData.cotisation) {\n      showError('Veuillez remplir tous les champs obligatoires.');\n      return;\n    }\n\n    // Validation de la date (doit être supérieure à la date du jour)\n    const dateActivite = new Date(formData.daty);\n    const aujourdHui = new Date();\n    aujourdHui.setHours(0, 0, 0, 0); // Réinitialiser l'heure pour comparer uniquement les dates\n\n    if (dateActivite < aujourdHui) {\n      showError('La date de l\\'activité doit être supérieure ou égale à la date du jour.');\n      return;\n    }\n\n    // Validation de la priorité (doit être entre 1 et 10)\n    const priorite = parseInt(formData.priorite);\n    if (isNaN(priorite) || priorite < 1 || priorite > 10) {\n      showError('La priorité doit être un nombre entier entre 1 et 10.');\n      return;\n    }\n\n    // Validation de la cotisation (doit être un nombre positif et compris entre les valeurs de constante)\n    const cotisation = parseFloat(formData.cotisation);\n    if (isNaN(cotisation) || cotisation < 0) {\n      showError('La cotisation doit être un montant valide (nombre positif).');\n      return;\n    }\n\n    // Vérifier que la cotisation est comprise entre les valeurs min et max définies dans la table constante\n    if (constante) {\n      const {\n        cotisation_inf,\n        cotisation_sup\n      } = constante;\n      if (cotisation < cotisation_inf || cotisation > cotisation_sup) {\n        showError(`La cotisation doit être comprise entre ${cotisation_inf} Ar et ${cotisation_sup} Ar.`);\n        return;\n      }\n    }\n    setSubmitting(true);\n    try {\n      const activiteData = {\n        ...formData,\n        priorite: priorite,\n        cotisation: cotisation\n      };\n      if (isEditMode) {\n        await activiteService.updateActivite(id, activiteData);\n      } else {\n        await activiteService.createActivite(activiteData);\n      }\n      showSuccess(`Activité ${isEditMode ? 'modifiée' : 'créée'} avec succès`);\n      navigate('/activites');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Erreur lors de l\\'enregistrement de l\\'activité:', err);\n      showError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Erreur lors de l\\'enregistrement de l\\'activité. Veuillez réessayer plus tard.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {\n    text: \"Chargement des donn\\xE9es...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"activite-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: isEditMode ? 'Modifier une activité' : 'Ajouter une activité'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"daty\",\n              className: \"form-label\",\n              children: \"Date *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"daty\",\n              name: \"daty\",\n              value: formData.daty,\n              onChange: handleChange,\n              min: new Date().toISOString().split('T')[0],\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text text-muted\",\n              children: \"La date doit \\xEAtre sup\\xE9rieure ou \\xE9gale \\xE0 la date du jour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              className: \"form-label\",\n              children: \"Description *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleChange,\n              rows: \"3\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"priorite\",\n              className: \"form-label\",\n              children: \"Priorit\\xE9 (1-10) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"priorite\",\n              name: \"priorite\",\n              value: formData.priorite,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"10\",\n              step: \"1\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text text-muted\",\n              children: \"Entrez un nombre entier entre 1 et 10 (1 = moins prioritaire, 10 = tr\\xE8s prioritaire)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"region\",\n              className: \"form-label\",\n              children: \"R\\xE9gion *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"region\",\n              name: \"region\",\n              value: formData.region,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cotisation\",\n              className: \"form-label\",\n              children: \"Cotisation (Ar) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: \"cotisation\",\n                name: \"cotisation\",\n                value: formData.cotisation,\n                onChange: handleChange,\n                min: constante ? constante.cotisation_inf : 0,\n                max: constante ? constante.cotisation_sup : 1000000,\n                step: \"0.01\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), !cotisationAuto && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                type: \"button\",\n                onClick: handleResetCotisation,\n                title: \"Recalculer automatiquement la cotisation en fonction de la priorit\\xE9\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-arrow-repeat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), constante && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text text-muted\",\n              children: [\"Valeurs de r\\xE9f\\xE9rence: Min: \", constante.cotisation_inf, \" Ar, Max: \", constante.cotisation_sup, \" Ar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/activites\",\n              className: \"btn btn-secondary\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: submitting,\n              children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"spinner-border spinner-border-sm me-2\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), \"Enregistrement...\"]\n              }, void 0, true) : 'Enregistrer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(ActiviteForm, \"ITHP/Vtx+/iEwcfykd34/zIgBe8=\", false, function () {\n  return [useParams, useNavigate, useNotification];\n});\n_c = ActiviteForm;\nexport default ActiviteForm;\nvar _c;\n$RefreshReg$(_c, \"ActiviteForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","activiteService","constanteService","Spinner","useNotification","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiviteForm","_s","id","navigate","isEditMode","formData","setFormData","daty","Date","toISOString","split","description","priorite","region","cotisation","loading","setLoading","submitting","setSubmitting","showError","showSuccess","constante","setConstante","cotisationAuto","setCotisationAuto","fetchData","constantes","getAllConstantes","length","activiteData","getActiviteById","toString","urlParams","URLSearchParams","window","location","search","regionParam","get","prevState","defaultPriorite","cotisationValue","getCotisationFromPriorite","err","console","error","cotisation_inf","cotisation_sup","ratio","Math","round","handleChange","e","name","value","target","newPriorite","parseInt","newCotisation","handleResetCotisation","handleSubmit","preventDefault","dateActivite","aujourdHui","setHours","isNaN","parseFloat","updateActivite","createActivite","_err$response","_err$response$data","response","data","text","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","htmlFor","type","onChange","min","required","rows","max","step","onClick","title","to","disabled","role","_c","$RefreshReg$"],"sources":["D:/itucedric/L3/S6/rattrap S4/prog/ex_react/stkkk/frontend/src/pages/activites/ActiviteForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport activiteService from '../../services/activite.service';\nimport constanteService from '../../services/constante.service';\nimport Spinner from '../../components/common/Spinner';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst ActiviteForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const isEditMode = !!id;\n  \n  const [formData, setFormData] = useState({\n    daty: new Date().toISOString().split('T')[0],\n    description: '',\n    priorite: '3',\n    region: '',\n    cotisation: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const { showError, showSuccess } = useNotification();\n  const [constante, setConstante] = useState(null);\n  const [cotisationAuto, setCotisationAuto] = useState(true);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Récupérer les constantes\n        const constantes = await constanteService.getAllConstantes();\n        if (constantes.length > 0) {\n          setConstante(constantes[0]);\n        }\n        \n        if (isEditMode) {\n          const activiteData = await activiteService.getActiviteById(id);\n          setFormData({\n            daty: activiteData.daty ? new Date(activiteData.daty).toISOString().split('T')[0] : '',\n            description: activiteData.description,\n            priorite: activiteData.priorite.toString(),\n            region: activiteData.region,\n            cotisation: activiteData.cotisation\n          });\n          setCotisationAuto(false); // En mode édition, on ne force pas la cotisation automatique\n        } else {\n          // Pour un nouveau formulaire, vérifier s'il y a un paramètre de région dans l'URL\n          const urlParams = new URLSearchParams(window.location.search);\n          const regionParam = urlParams.get('region');\n          \n          if (regionParam) {\n            setFormData(prevState => ({\n              ...prevState,\n              region: regionParam\n            }));\n          }\n          \n          // Définir la cotisation par défaut en fonction de la priorité\n          if (constantes.length > 0) {\n            const defaultPriorite = 3; // Priorité par défaut\n            const cotisationValue = getCotisationFromPriorite(defaultPriorite, constantes[0]);\n            setFormData(prevState => ({\n              ...prevState,\n              cotisation: cotisationValue\n            }));\n          }\n        }\n      } catch (err) {\n        console.error('Erreur lors du chargement des données:', err);\n        showError('Erreur lors du chargement des données. Veuillez réessayer plus tard.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [id, isEditMode]);\n  \n  // Fonction pour calculer la cotisation en fonction de la priorité et des constantes\n  const getCotisationFromPriorite = (priorite, constante) => {\n    if (!constante) return '';\n    \n    const { cotisation_inf, cotisation_sup } = constante;\n    const ratio = (priorite - 1) / 9; // Priorité de 1 à 10 normalisée entre 0 et 1\n    const cotisation = cotisation_inf + ratio * (cotisation_sup - cotisation_inf);\n    \n    return Math.round(cotisation); // Arrondir à l'entier le plus proche\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'priorite' && cotisationAuto && constante) {\n      // Si la priorité change et que la cotisation est automatique, mettre à jour la cotisation\n      const newPriorite = parseInt(value);\n      const newCotisation = getCotisationFromPriorite(newPriorite, constante);\n      \n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value,\n        cotisation: newCotisation\n      }));\n    } else {\n      // Sinon, mettre à jour normalement\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n      \n      // Si l'utilisateur modifie manuellement la cotisation, désactiver le mode automatique\n      if (name === 'cotisation') {\n        setCotisationAuto(false);\n      }\n    }\n  };\n  \n  // Fonction pour réactiver le mode cotisation automatique\n  const handleResetCotisation = () => {\n    if (constante) {\n      const priorite = parseInt(formData.priorite);\n      const newCotisation = getCotisationFromPriorite(priorite, constante);\n      \n      setFormData(prevState => ({\n        ...prevState,\n        cotisation: newCotisation\n      }));\n      \n      setCotisationAuto(true);\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validation de base\n    if (!formData.daty || !formData.description || !formData.region || !formData.cotisation) {\n      showError('Veuillez remplir tous les champs obligatoires.');\n      return;\n    }\n    \n    // Validation de la date (doit être supérieure à la date du jour)\n    const dateActivite = new Date(formData.daty);\n    const aujourdHui = new Date();\n    aujourdHui.setHours(0, 0, 0, 0); // Réinitialiser l'heure pour comparer uniquement les dates\n    \n    if (dateActivite < aujourdHui) {\n      showError('La date de l\\'activité doit être supérieure ou égale à la date du jour.');\n      return;\n    }\n    \n    // Validation de la priorité (doit être entre 1 et 10)\n    const priorite = parseInt(formData.priorite);\n    if (isNaN(priorite) || priorite < 1 || priorite > 10) {\n      showError('La priorité doit être un nombre entier entre 1 et 10.');\n      return;\n    }\n    \n    // Validation de la cotisation (doit être un nombre positif et compris entre les valeurs de constante)\n    const cotisation = parseFloat(formData.cotisation);\n    if (isNaN(cotisation) || cotisation < 0) {\n      showError('La cotisation doit être un montant valide (nombre positif).');\n      return;\n    }\n    \n    // Vérifier que la cotisation est comprise entre les valeurs min et max définies dans la table constante\n    if (constante) {\n      const { cotisation_inf, cotisation_sup } = constante;\n      if (cotisation < cotisation_inf || cotisation > cotisation_sup) {\n        showError(`La cotisation doit être comprise entre ${cotisation_inf} Ar et ${cotisation_sup} Ar.`);\n        return;\n      }\n    }\n    \n    setSubmitting(true);\n\n    \n    try {\n      const activiteData = {\n        ...formData,\n        priorite: priorite,\n        cotisation: cotisation\n      };\n      \n      if (isEditMode) {\n        await activiteService.updateActivite(id, activiteData);\n      } else {\n        await activiteService.createActivite(activiteData);\n      }\n      \n      showSuccess(`Activité ${isEditMode ? 'modifiée' : 'créée'} avec succès`);\n      navigate('/activites');\n    } catch (err) {\n      console.error('Erreur lors de l\\'enregistrement de l\\'activité:', err);\n      showError(err.response?.data?.error || 'Erreur lors de l\\'enregistrement de l\\'activité. Veuillez réessayer plus tard.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  \n  if (loading) return <Spinner text=\"Chargement des données...\" />;\n  \n  return (\n    <div className=\"activite-form\">\n      <h1 className=\"mb-4\">{isEditMode ? 'Modifier une activité' : 'Ajouter une activité'}</h1>\n      \n\n      \n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"daty\" className=\"form-label\">Date *</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"daty\"\n                name=\"daty\"\n                value={formData.daty}\n                onChange={handleChange}\n                min={new Date().toISOString().split('T')[0]}\n                required\n              />\n              <small className=\"form-text text-muted\">\n                La date doit être supérieure ou égale à la date du jour\n              </small>\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label\">Description *</label>\n              <textarea\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleChange}\n                rows=\"3\"\n                required\n              ></textarea>\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"priorite\" className=\"form-label\">Priorité (1-10) *</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"priorite\"\n                name=\"priorite\"\n                value={formData.priorite}\n                onChange={handleChange}\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                required\n              />\n              <small className=\"form-text text-muted\">\n                Entrez un nombre entier entre 1 et 10 (1 = moins prioritaire, 10 = très prioritaire)\n              </small>\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"region\" className=\"form-label\">Région *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"region\"\n                name=\"region\"\n                value={formData.region}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"cotisation\" className=\"form-label\">Cotisation (Ar) *</label>\n              <div className=\"input-group\">\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"cotisation\"\n                  name=\"cotisation\"\n                  value={formData.cotisation}\n                  onChange={handleChange}\n                  min={constante ? constante.cotisation_inf : 0}\n                  max={constante ? constante.cotisation_sup : 1000000}\n                  step=\"0.01\"\n                  required\n                />\n                {!cotisationAuto && (\n                  <button \n                    className=\"btn btn-outline-secondary\" \n                    type=\"button\"\n                    onClick={handleResetCotisation}\n                    title=\"Recalculer automatiquement la cotisation en fonction de la priorité\"\n                  >\n                    <i className=\"bi bi-arrow-repeat\"></i>\n                  </button>\n                )}\n              </div>\n              {constante && (\n                <small className=\"form-text text-muted\">\n                  Valeurs de référence: Min: {constante.cotisation_inf} Ar, Max: {constante.cotisation_sup} Ar\n                </small>\n              )}\n            </div>\n            \n            <div className=\"d-flex justify-content-between\">\n              <Link to=\"/activites\" className=\"btn btn-secondary\">\n                Annuler\n              </Link>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={submitting}\n              >\n                {submitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Enregistrement...\n                  </>\n                ) : (\n                  'Enregistrer'\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActiviteForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}